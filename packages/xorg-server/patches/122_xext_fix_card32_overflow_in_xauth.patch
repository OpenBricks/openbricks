Description:  Xext: "xauth generate" with large timeout crashes Xorg #27134
 The security timout CARD32 millis would overflow with large timeouts, causing 
 the timer callback to be called immediately and hit an assertion in
 SecurityAuthorizationExpired.
 .
 This has not been applied upstream yet.  Discussion of the patch faltered
 without resolution.  This patch has a problem when the epoch time is
 sufficiently far in the future (about 2035) that it doesn't matter right now.
Origin: http://patchwork.freedesktop.org/patch/242/
Bug: https://bugs.freedesktop.org/show_bug.cgi?id=27134
Bug-Ubuntu: https://launchpad.net/bugs/519049

Index: xorg-server/Xext/security.c
===================================================================
--- xorg-server.orig/Xext/security.c	2011-08-24 12:52:45.635647146 +0300
+++ xorg-server/Xext/security.c	2011-08-24 12:56:49.595650621 +0300
@@ -271,10 +271,10 @@
     /* maxSecs is the number of full seconds that can be expressed in
      * 32 bits worth of milliseconds
      */
-    CARD32 maxSecs = (CARD32)(~0) / (CARD32)MILLI_PER_SECOND;
+    CARD32 maxSecs = (CARD32)(MAXINT) / (CARD32)MILLI_PER_SECOND;
 
     if (seconds > maxSecs)
-    { /* only come here if we want to wait more than 49 days */
+    { /* only come here if we want to wait more than 24 days */
 	pAuth->secondsRemaining = seconds - maxSecs;
 	return maxSecs * MILLI_PER_SECOND;
     }
@@ -312,8 +312,6 @@
 {
     SecurityAuthorizationPtr pAuth = (SecurityAuthorizationPtr)pval;
 
-    assert(pAuth->timer == timer);
-
     if (pAuth->secondsRemaining)
     {
 	return SecurityComputeAuthorizationTimeout(pAuth,
