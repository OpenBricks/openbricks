diff --git a/fb/fbpict.c b/fb/fbpict.c
index 7636040..2798e24 100644
--- a/fb/fbpict.c
+++ b/fb/fbpict.c
@@ -163,7 +163,19 @@ create_bits_picture (PicturePtr pict,
 	pict->format,
 	pixmap->drawable.width, pixmap->drawable.height,
 	(uint32_t *)bits, stride * sizeof (FbStride));
-    
+
+    /* pixman_image_create_bits() can return NULL under a variety of circumstances:
+       - bits is NULL
+       - stride * sizeof (FbStride) is not a whole number of uint32_t's
+       - pict->format has BPP greater than its DEPTH
+       - function could not instantiate bits (via the create_bits() routine)
+       - the image could not be allocated
+       This seems a rather wide range of circumstances!  Checking for NULL here
+       before pixman_image_set_accessors() seems extremely sensible.  How has
+       this not been crashing more frequently?
+      */
+    if (!image)
+        return NULL;
     
 #ifdef FB_ACCESS_WRAPPER
 #if FB_SHIFT==5
