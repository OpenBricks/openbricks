commit da218289275e67e49d801d58dd818d237de8a9bc
Author: Christopher James Halse Rogers <christopher.halse.rogers@canonical.com>
Date:   Tue Aug 24 13:30:25 2010 +1000

    Xext: Fix edge case with {Positive,Negative}Transition triggers.
    
    The {Positive,Negative}Transition triggers only fire when the counter
    goes from strictly {below,above} the threshold.  If
    SyncComputeBracketValues gets called exactly at this threshold we may update
    the bracket values so that the counter is not updated past the threshold.
    
    Signed-off-by: Christopher James Halse Rogers <christopher.halse.rogers@canonical.com>

diff --git a/Xext/sync.c b/Xext/sync.c
index a51262a..c00e692 100644
--- a/Xext/sync.c
+++ b/Xext/sync.c
@@ -959,6 +959,17 @@ SyncComputeBracketValues(SyncCounter *pCounter)
 	    {
 		psci->bracket_less = pTrigger->test_value;
 		pnewltval = &psci->bracket_less;
+	    } else if (XSyncValueEqual(pCounter->value, pTrigger->test_value) &&
+		       XSyncValueLessThan(pTrigger->test_value,
+					  psci->bracket_greater))
+	    {
+	        /*
+		 * The value is exactly equal to our threshold.  We want one
+		 * more event in the positive direction to ensure we pick up
+		 * when the value *exceeds* this threshold.
+		 */
+	        psci->bracket_greater = pTrigger->test_value;
+		pnewgtval = &psci->bracket_greater;
 	    }
 	}
         else if (pTrigger->test_type == XSyncPositiveTransition &&
@@ -969,6 +980,17 @@ SyncComputeBracketValues(SyncCounter *pCounter)
 	    {
 		psci->bracket_greater = pTrigger->test_value;
 		pnewgtval = &psci->bracket_greater;
+	    } else if (XSyncValueEqual(pCounter->value, pTrigger->test_value) &&
+		       XSyncValueGreaterThan(pTrigger->test_value,
+					     psci->bracket_less))
+	    {
+	        /*
+		 * The value is exactly equal to our threshold.  We want one
+		 * more event in the negative direction to ensure we pick up
+		 * when the value is less than this threshold.
+		 */
+	        psci->bracket_less = pTrigger->test_value;
+		pnewltval = &psci->bracket_less;
 	    }
 	}
     } /* end for each trigger */
commit d9e9c0c3cf0456f78b6eed3290e6a418e38963fb
Author: Christopher James Halse Rogers <christopher.halse.rogers@canonical.com>
Date:   Tue Aug 24 13:35:05 2010 +1000

    IDLETIME: Fix edge-case in IdleTimeBlockHandler
    
    Ensure that if we're called exactly on the threshold of a
    NegativeTransition trigger that we reshedule to pick up
    an idle time over the threshold.
    
    Signed-off-by: Christopher James Halse Rogers <christopher.halse.rogers@canonical.com>

diff --git a/Xext/sync.c b/Xext/sync.c
index c00e692..314b63e 100644
--- a/Xext/sync.c
+++ b/Xext/sync.c
@@ -2322,6 +2322,14 @@ IdleTimeBlockHandler(pointer env, struct timeval **wt, pointer LastSelectMask)
 		break;
 	    }
 	}
+	/* 
+	 * We've been called exactly on the idle time, but we have a
+	 * NegativeTransition trigger which requires a transition from an
+	 * idle time greater than this.  Schedule a wakeup for the next
+	 * millisecond so we won't miss a transition.
+	 */
+	if (XSyncValueEqual (idle, *pIdleTimeValueLess))
+	    AdjustWaitForDelay(wt, 1);
     }
     else if (pIdleTimeValueGreater)
     {
