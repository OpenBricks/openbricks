#!/bin/sh

. config/options

require_cxx $1

die () {
  echo "Unable to build QT: enable either Embedded or X11 flavor and try again"
  exit 1
}

select_qt_embedded () {
  CFG_EMBEDDED="$CFG_EMBEDDED -embedded $CROSS_ARCH"
  CFG_EMBEDDED="$CFG_EMBEDDED -depths all"

  CFG_EMBEDDED="$CFG_EMBEDDED -qt-gfx-linuxfb"

  pkg_uses $1 directfb && \
    CFG_EMBEDDED="$CFG_EMBEDDED -qt-gfx-directfb"

  CFG_EMBEDDED="$CFG_EMBEDDED -qt-kbd-tty"
  CFG_EMBEDDED="$CFG_EMBEDDED -qt-kbd-linuxinput"

  CFG_EMBEDDED="$CFG_EMBEDDED -qt-mouse-pc"
  CFG_EMBEDDED="$CFG_EMBEDDED -qt-mouse-linuxinput"

  pkg_uses $1 touchscreen && \
    CFG_EMBEDDED="$CFG_EMBEDDED -qt-mouse-tslib"

  return 0
}

select_qt_x11 () {
  CFG_X="$CFG_X -xcursor"
  CFG_X="$CFG_X -xrandr"
  CFG_X="$CFG_X -xrender"
  CFG_X="$CFG_X -xinput"
  CFG_X="$CFG_X -xkb"
}

# Ensure one of the qualifying flags has been set to build QT.
if ! pkg_uses $1 embedded && ! pkg_uses $1 xorg; then
  die
fi

pkg_uses $1 opengl && \
  CROSS_GL="-opengl" || CROSS_GL="-no-opengl"

pkg_uses $1 opengles && \
  CROSS_GL="-opengl es2"

pkg_uses $1 openvg && \
  CROSS_VG="-openvg" || CROSS_VG="-no-openvg"

pkg_uses $1 openssl && \
  CROSS_SSL="-openssl" || CROSS_SSL="-no-openssl"

pkg_uses $1 gstreamer && \
  CROSS_GST="-phonon" || CROSS_GST="-no-phonon"

# architecture specific options
case "$TARGET_ARCH" in
  i386|x86_64)
    CROSS_ARCH=x86
    CROSS_ENDIAN="-little-endian"
    ;;

  powerpc|powerpc64)
    CROSS_ARCH=powerpc
    CROSS_ENDIAN="-big-endian"
    ;;

  arm)
    CROSS_ARCH=arm
    CROSS_ENDIAN="-little-endian"
    ;;

  mips)
    CROSS_ARCH=mips
    CROSS_ENDIAN="-big-endian"
    ;;
esac

if [ "$FPU_OPTIMIZATIONS" = neon ]; then
  CFG_NEON=""
else
  CFG_NEON="-no-neon"
fi

if pkg_uses $1 webkit; then
    CFG_WEBKIT="-webkit"
    CFG_JS="-javascript-jit"
else
    CFG_WEBKIT="-no-webkit"
    CFG_JS="-no-javascript-jit"
fi

if pkg_uses $1 xorg; then
  select_qt_x11 $1
  CFG_QT="$CFG_X"
else
  select_qt_embedded $1
  CFG_QT="$CFG_EMBEDDED"
fi

cd $BUILD/$1*

# unset flags, QT does it by itself
unset CC CXX AR OBJCOPY STRIP CFLAGS CXXFLAGS CPPFLAGS LDFLAGS

# force our pkg-config usage
export QT_FORCE_PKGCONFIG=yes

yes | ./configure \
            -opensource \
            -release \
            -prefix         /usr \
            -sysconfdir     /etc \
            -datadir        /usr/share/qt4 \
            -plugindir      /usr/lib/qt4/plugins \
            -translationdir /usr/share/qt4/translations \
            -crossarch $CROSS_ARCH \
            $CROSS_ENDIAN \
            $CFG_NEON \
            -platform linux-g++ \
            -xplatform linux-g++-openbricks \
            -shared \
            -stl \
            -no-qt3support \
            -qt-sql-sqlite \
            -system-sqlite \
            $CROSS_GL \
            $CROSS_VG \
            $CROSS_SSL \
            $CROSS_GST \
            $CFG_WEBKIT \
            $CFG_JS \
            $CFG_QT \
            -exceptions \
            -xmlpatterns \
            -multimedia \
            -audio-backend \
            -script \
            -scripttools \
            -declarative \
            -no-nis \
            -no-cups \
            -make libs \
            -make tools \
            -nomake examples \
            -nomake demos \
            -nomake docs \
            -v

./bin/qmake
make

make_install sysroot unstripped

# discard native system includes
sed -i "s%-I/usr/include%%g" .install/usr/lib/*.la
sed -i "s%-L/usr/lib%%g"     .install/usr/lib/*.la
sed -i "s%-I/usr/include%%g" .install/usr/lib/*.prl
sed -i "s%-L/usr/lib%%g"     .install/usr/lib/*.prl
sed -i "s%-I/usr/include%%g" .install/usr/lib/pkgconfig/*.pc
sed -i "s%-L/usr/lib%%g"     .install/usr/lib/pkgconfig/*.pc
