#!/bin/sh

export PATH=/sbin:/usr/sbin:/bin:/usr/bin

# install busybox symlinks
busybox --install -s

# mount required filesystems
busybox mount -t proc none /proc
busybox mount -t sysfs none /sys

# prepare /dev
mount -t devtmpfs devtmpfs /dev
mkdir /dev/pts /dev/shm
mount -t devpts devpts /dev/pts
mount -t tmpfs none /dev/shm
echo '/bin/mdev' > /proc/sys/kernel/hotplug
mdev -s

# parse kernel cmdline
for arg in $(cat /proc/cmdline); do
  case $arg in
    root=*)
      ROOT="${arg#root=}"
      ;;
  esac
done

# try to mount the rootfs specified in cmdline...
[ -n "$ROOT" ] && if mount -o ro $ROOT /mnt; then
  if ! mount -t squashfs /mnt/rootfs /newroot; then
    umount /mnt
    unset ROOT
  fi
else
  unset ROOT
fi

# ...otherwise just scan the block devices for rootfs
if [ -z "$ROOT" ]; then
  (cd /sys/block; for dev in *; do
    echo $dev | grep -q loop && continue
    echo $dev | grep -q ram && continue
    mount -o ro /dev/$dev /mnt || continue
    if mount -t squashfs /mnt/rootfs /newroot; then
      break
    else
      umount /mnt
    fi
  done)
fi

if [ ! -x /newroot/sbin/init ]; then
    echo "Cannot find a valid root filesystem, dropping to shell"
    exec sh
fi

INIT_ARGS=`cat /proc/cmdline`

# Reset kernel hotplugging
echo "" > /proc/sys/kernel/hotplug
umount /sys
umount /dev/shm
umount /dev/pts
umount /dev
umount /proc

# Change to the new root partition and execute /sbin/init
echo "Running init..."
if ! exec switch_root /newroot /sbin/init $INIT_ARGS; then
  echo "Failed, dropping to shell"
  mount -t proc none /proc
  mount -t sysfs none /sys
  exec sh
fi
