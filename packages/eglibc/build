#!/bin/sh

. config/options

export BUILD_CC=$HOST_CC
export OBJDUMP_FOR_HOST=objdump

if [ "$TARGET_ARCH" = powerpc ]; then
  CFLAGS="-mpowerpc"
elif [ "$TARGET_ARCH" = powerpc64 ]; then
  CFLAGS="-mpowerpc64"
elif [ "$TARGET_ARCH" = i386 ]; then
  CFLAGS="-march=$(echo $TARGET_NAME | cut -d- -f 1) -mtune=generic"
elif [ "$TARGET_ARCH" = arm ]; then
  CFLAGS="-mcpu=$TARGET_CPU -mtune=$TARGET_CPU"
  [ "$FPU_OPTIMIZATIONS" = "neon" ] && CFLAGS="$CFLAGS -mfpu=neon -mfloat-abi=softfp"
elif [ "$TARGET_ARCH" = mips ]; then
  CFLAGS="-mtune=$TARGET_CPU"
else
  CFLAGS="-mtune=generic"
fi
CFLAGS="$CFLAGS -g -O2 -fgnu89-inline"

if [ "$DEBUG" = yes ]; then
  DEBUG_CONFIG="--enable-debug"
else
  DEBUG_CONFIG="--disable-debug"
  DEBUG_OPTIONS="OPTION_EGLIBC_MEMUSAGE = n"
fi

ASFLAGS=$CFLAGS

NSS_CONF_DIR=`ls -d $ROOT/$BUILD/eglibc*/nss`

cd $BUILD/eglibc*
mkdir -p objdir-$1
cd objdir-$1

cat >config.cache <<EOF
libc_cv_forced_unwind=yes
libc_cv_c_cleanup=yes
libc_cv_gnu89_inline=yes
libc_cv_ssp=no
EOF

pkg_uses $1 ipv6 || IPV6_OPTIONS="OPTION_EGLIBC_ADVANCED_INET6 = n"

cat >option-groups.config <<EOF
# IPv6 Support
  $IPV6_OPTIONS

# Needed for Connman:
  OPTION_EGLIBC_BACKTRACE = y

  OPTION_EGLIBC_BIG_MACROS = n
  OPTION_EGLIBC_BSD = n

# Needed for xf86-video-fglrx:
  OPTION_EGLIBC_CATGETS = y

# libiconv replacement:
  OPTION_EGLIBC_CHARSETS = y

  OPTION_EGLIBC_DB_ALIASES = n
  OPTION_EGLIBC_LOCALES = y

# Needed for GLib and Python:
  OPTION_EGLIBC_LOCALE_CODE = y

  OPTION_EGLIBC_NIS = y
  OPTION_EGLIBC_NSSWITCH = y
  OPTION_EGLIBC_RCMD = n

# Needed by util-linux-ng
  OPTION_EGLIBC_GETLOGIN = y

# Needed for dropbear
  OPTION_EGLIBC_UTMP = y

# Needed by systemd 
  OPTION_EGLIBC_UTMPX = y

# Debug options
  $DEBUG_OPTIONS

EOF

cat >configparms <<EOF
slibdir=/lib
EOF

do_gcc_strip_lto
do_gcc_strip_linker_plugin
do_gcc_strip_gold

../configure --host=$TARGET_NAME \
             --build=$HOST_NAME \
             --prefix=/usr \
             --libexecdir=/usr/lib/eglibc \
             --disable-profile \
             --disable-sanity-checks \
             --enable-add-ons \
             --with-tls \
             --enable-kernel=2.6.0 \
             --with-__thread \
             --with-binutils=$ROOT/$TOOLCHAIN/bin \
             --with-headers=$SYSROOT_PREFIX/usr/include \
             --cache-file=config.cache \
             --without-cvs \
             --without-gd \
             $DEBUG_CONFIG
make

make_install
if [ -d .install/lib64 ]; then
  mv .install/lib64/* .install/lib/
  rmdir .install/lib64
fi
if [ -d .install/usr/lib64 ]; then
  mv .install/usr/lib64/* .install/usr/lib/
  rmdir .install/usr/lib64
fi
sed -i 's%bash%sh%g' .install/usr/bin/ldd
extract_debug_info .install-debuginfo .install/lib/*.so
do_strip shlib .install/lib/*.so

rm -rf ../.install ../.install-debuginfo
mv .install .install-debuginfo ..

