# LCDd.conf -- configuration file for the LCDproc server daemon LCDd

## Server section with all kinds of settings for the LCDd server ##
[server]

# Where can we find the driver modules ?
# IMPORTANT: Make sure to change this setting to reflect your
#            specific setup! Otherwise LCDd won't be able to find
#            the driver modules and will thus not be able to
#            function properly.
# NOTE: Always place a slash as last character !
DriverPath=/usr/lib/lcdproc/

# Tells the server to load the given drivers. Multiple lines can be given.
# The name of the driver is case sensitive and determines the section
# where to look for further configuration options of the specific driver
# as well as the name of the dynamic driver module to load at runtime.
# The latter one can be changed by giving af File= directive in the
# driver specific section.
#
# The following drivers are supported:
#   bayrad, CFontz, CFontz633, CFontzPacket, curses, CwLnx, ea65, 
#   EyeboxOne, g15, glcdlib, glk, hd44780, icp_a106, imon, imonlcd, IOWarrior,
#   irman, joy, lb216, lcdm001, lcterm, lirc, lis, MD8800, ms6931, mtc_s16209x,
#   MtxOrb, mx5000, NoritakeVFD, picolcd, pyramid, sed1330, sed1520, serialPOS,
#   serialVFD, shuttleVFD, sli, stv5730, svga, t6963, text, tyan, ula200,
#   xosd
#Driver=curses
Driver=imonlcd

# Tells the driver to bind to the given interface
Bind=127.0.0.1

# Listen on this specified port; defaults to 13666.
Port=13666

# Sets the reporting level; defaults to 2 (warnings and errors only).
#ReportLevel=3

# Should we report to syslog instead of stderr ? [default: no; legal: yes, no]
#ReportToSyslog=yes

# User to run as.  LCDd will drop its root priviledges, if any,
# and run as this user instead.
User=nobody

# The server will stay in the foreground if set to true.
#Foreground=no

# Hello message: each entry represents a display line; default: builtin
#Hello=" S t a r t"
Hello="  X B M C"

# GoodBye message: each entry represents a display line; default: builtin
#GoodBye="Thanks for using"
GoodBye="  X B M C"

# Sets the default time in seconds to displays a screen.
WaitTime=5

# If yes, the the serverscreen will be rotated as a usual info screen. If no,
# it will be a background screen, only visible when no other screens are
# active. The special value 'blank' is similar to no, but only a blank screen
# is displayed. [default: on; legal: on, off, blank]
ServerScreen=blank

# Set master backlight setting. If set to 'open' a client may control the
# backlight for its own screens (only). [default: open; legal: off, open, on]
Backlight=on

# Set master heartbeat setting. If set to 'open' a client may control the
# heartbeat for its own screens (only). [default: open; legal: off, open, on]
#Heartbeat=off

# set title scrolling speed [default: 10; legal: 0-10]
#TitleSpeed=10

# The "...Key=" lines define what the server does with keypresses that
# don't go to any client.
# These are the defaults:
#ToggleRotateKey=Enter
#PrevScreenKey=Left
#NextScreenKey=Right
#ScrollUpKey=Up
#ScrollDownKey=Down

# If you have only 4 keys, you can choose to use this:
#ToggleRotateKey=Enter
#PrevScreenKey=Up
#NextScreenKey=Down

# If you have only 3 keys, you can choose to use this:
#ToggleRotateKey=Enter
#PrevScreenKey=Up



## The menu section. The menu is an internal LCDproc client. ##
[menu]
# You can configure what keys the menu should use. Note that the MenuKey
# will be reserved exclusively, the others work in shared mode.

# The following works excellent with 4 keys or more.
#MenuKey=Escape
#EnterKey=Enter
#UpKey=Up
#DownKey=Down
# If you have 6 keys you may define these as well
#LeftKey=Left
#RightKey=Right

# If you have only 3 keys, you could use something like this:
#MenuKey=Escape
#EnterKey=Enter
#DownKey=Down



### Driver sections are below this line, in alphabetical order  ###

## Soundgraph iMON LCD ##
[imonlcd]
# Specify which iMon protocol should be used [legal: 0=15c2:ffdc device,
# 1=15c2:0038 device; default: 0]
Protocol=1

# Set the exit behavior [legal: 0=leave shutdown message, 1=show the big clock,
# 2=blank device; default: 1]
OnExit=2

# Select the output device to use [default: /dev/lcd0]
Device=/dev/lcd0

# Select the displays contrast [default: 200; legal: 0-1000]
Contrast=200

# Specify the size of the display in pixels [default: 96x16]
#Size=96x16

# Set the backlight state [default: on; legal: on, off]
#Backlight=on

# Set the disc mode [legal: 0=spin the "slim" disc - two disc segments,
# 1=their complement spinning; default: 0]
DiscMode=1

## Diplay grafico with drivers serdisplib

DriverPath=/usr/lib/lcdproc

Driver=glclib

[glcdlib]

## mandatory:

# which graphical display supported by graphlcd-base to use [default: image]
# (see /etc/graphlcd.conf for possible drivers)
Driver=serdisp

# no=use graphlcd bitmap fonts (they have only one size / font file)
# yes=use fonts supported by FreeType2 (needs Freetype2 support in
# libglcdprocdriver and its dependants)
UseFT2=yes

# text resolution in fixed width characters [default: 16x4]
# (if it won't fit according to available physical pixel resolution
# and the minimum available font face size in pixels, then
# 'DebugBorder' will automatically be turned on)
TextResolution=20x4

# path to font file to use
FontFile=/usr/share/fonts/corefonts/courbd.ttf

## these only apply if UseFT2=yes:

# character encoding to use
CharEncoding=iso8859-2

# minimum size in pixels in which fonts should be rendered
MinFontFaceSize=7x12

## optional:
Brightness=50                   # Brightness (in %) if applicable
Contrast=50                     # Contrast (in %) if applicable
Backlight=no                    # Backlight if applicable
UpsideDown=no                   # flip image upside down
Invert=no                       # invert light/dark pixels
ShowDebugFrame=no               # turns on/off 1 pixel thick debugging
                                # border within the usable text area,
                                # for setting up TextResolution and
                                # MinFontFaceSize (if using FT2);
ShowBigBorder=no                # border around the unused area
ShowThinBorder=yes              # border around the unused area
PixelShiftX=0
PixelShiftY=2

# EOF
