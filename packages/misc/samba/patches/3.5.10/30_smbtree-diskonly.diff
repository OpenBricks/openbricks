diff -Naur samba-3.5.4.orig/source3/utils/smbtree.c samba-3.5.4/source3/utils/smbtree.c
--- samba-3.5.4.orig/source3/utils/smbtree.c	2010-08-07 22:18:27.268989060 +0200
+++ samba-3.5.4/source3/utils/smbtree.c	2010-08-07 22:27:03.738293848 +0200
@@ -205,13 +205,15 @@
 }
 
 
-static bool get_shares(char *server_name, struct user_auth_info *user_info)
+static bool get_shares(char *server_name, struct in_addr *server_ip, struct user_auth_info *user_info)
 {
         struct cli_state *cli;
 
         if (!(cli = get_ipc_connect(server_name, NULL, user_info)))
                 return False;
 
+	*server_ip = ((struct sockaddr_in *) &cli->dest_ss)->sin_addr;
+
 	if (get_rpc_shares(cli, add_name, &shares))
 		return True;
 
@@ -224,6 +226,7 @@
 static bool print_tree(struct user_auth_info *user_info)
 {
         struct smb_name_list *wg, *sv, *sh;
+	struct in_addr server_ip;
 
         /* List workgroups */
 
@@ -232,8 +235,6 @@
 
         for (wg = workgroups; wg; wg = wg->next) {
 
-                printf("%s\n", wg->name);
-
                 /* List servers */
 
                 free_name_list(servers);
@@ -245,21 +246,23 @@
 
                 for (sv = servers; sv; sv = sv->next) {
 
-                        printf("\t\\\\%-15s\t\t%s\n", 
-			       sv->name, sv->comment);
-
                         /* List shares */
 
                         free_name_list(shares);
                         shares = NULL;
 
                         if (level == LEV_SERVER ||
-                            !get_shares(sv->name, user_info))
+                            !get_shares(sv->name, &server_ip, user_info))
                                 continue;
 
                         for (sh = shares; sh; sh = sh->next) {
-                                printf("\t\t\\\\%s\\%-15s\t%s\n", 
-				       sv->name, sh->name, sh->comment);
+                                if (sh->server_type == STYPE_DISKTREE &&
+                                    sh->name[strlen(sh->name)-1] != '$') {
+					printf("%s/%s/%s\n",
+					       sv->name, inet_ntoa(server_ip),
+					       sh->name);
+					fflush(stdout);
+                                }
                         }
                 }
         }
