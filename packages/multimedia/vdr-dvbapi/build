#!/bin/sh

. config/options

get_meta $1
cd $PKG_BUILD_DIR

VDR_DIR=`basename $BUILD/vdr-2*`

if [ "$TARGET_ARCH" = powerpc ]; then
  CFLAGS="-mpowerpc"
elif [ "$TARGET_ARCH" = powerpc64 ]; then
  CFLAGS="-mpowerpc64"
elif [ "$TARGET_ARCH" = i386 ]; then
  CFLAGS="-march=$(echo $TARGET_NAME | cut -d- -f 1) -mtune=generic"
elif [ "$TARGET_ARCH" = arm ]; then
  sed -i "s/^CSAFLAGS/#CSAFLAGS/g" Makefile
  CFLAGS="-mcpu=$TARGET_CPU -mtune=$TARGET_CPU"
  [ "$FPU_OPTIMIZATIONS" = "neon" ] && CFLAGS="$CFLAGS -mfpu=neon $ARM_FLOAT_ABI"
  [ "$FPU_OPTIMIZATIONS" = "vfp2" ] && CFLAGS="$CFLAGS -mfpu=vfp $ARM_FLOAT_ABI"
  [ "$FPU_OPTIMIZATIONS" = "vfp3" ] && CFLAGS="$CFLAGS -mfpu=vfpv3 $ARM_FLOAT_ABI"
  [ "$FPU_OPTIMIZATIONS" = "vfp3-d16" ] && CFLAGS="$CFLAGS -mfpu=vfpv3-d16 $ARM_FLOAT_ABI"
  [ "$FPU_OPTIMIZATIONS" = "vfp4" ] && CFLAGS="$CFLAGS -mfpu=vfpv4 $ARM_FLOAT_ABI"
  [ "$FPU_OPTIMIZATIONS" = "neon-vfp4" ] && CFLAGS="$CFLAGS -mfpu=neon-vfpv4 $ARM_FLOAT_ABI"
  CSAFLAGS="$CFLAGS"
  FLAGS="$CFLAGS"
elif [ "$TARGET_ARCH" = mips ]; then
  CFLAGS="-mtune=$TARGET_CPU"
else
  CFLAGS="-mtune=generic"
fi

CFLAGS="$CFLAGS -fPIC"
CXXFLAGS="$CXXFLAGS -fPIC"
LDFLAGS="$LDFLAGS -fPIC"

if pkg_uses $1 dvbcsa; then
  CFG_DVBCSA="LIBDVBCSA=1"
fi

if [ "$TARGET_ARCH" = x86_64 ]; then
  sed -i "s|PARALLEL   ?= PARALLEL_32_INT|PARALLEL   ?= PARALLEL_128_SSE|" Makefile
  sed -i "s|CSAFLAGS   ?= -Wall -fPIC -g -O3 -fomit-frame-pointer -fexpensive-optimizations -funroll-loops|CSAFLAGS   ?= -fPIC -O3 -fexpensive-optimizations -funroll-loops -mmmx -msse -msse2 -msse3|" Makefile
fi

make \
  VDRDIR="../$VDR_DIR" \
  LIBDIR="." \
  DVBDIR=$DVB_DIR \
  LOCALEDIR="./locale" \
  $CFG_DVBCSA

get_meta vdr
verlte 1.7.36 $PKG_VERSION && VDRINS="no" || VDRINS="yes"
if [ $VDRINS = "yes" ]; then
  make_install
  rm -rf .install-debuginfo || true
else
  do_strip bin lib$1.so.*
fi
