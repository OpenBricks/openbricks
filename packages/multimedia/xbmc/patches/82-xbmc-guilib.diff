--- a/xbmc/guilib/GUIControl.h	2019-11-18 23:32:20.487773345 +0100
+++ b/xbmc/guilib/GUIControl.h	2019-11-19 06:54:44.695904709 +0100
@@ -210,7 +210,7 @@
   virtual void SetHeight(float height);
   virtual void SetVisible(bool bVisible, bool setVisState = false);
   void SetVisibleCondition(const CStdString &expression, const CStdString &allowHiddenFocus = "");
-  bool HasVisibleCondition() const { return m_visibleCondition; };
+  bool HasVisibleCondition() const { return !!m_visibleCondition; };
   void SetEnableCondition(const CStdString &expression);
   virtual void UpdateVisibility(const CGUIListItem *item = NULL);
   virtual void SetInitialVisibility();
--- a/xbmc/epg/Epg.cpp	2019-11-19 19:28:50.878602213 +0100
+++ b/xbmc/epg/Epg.cpp	2019-11-19 19:28:50.926601921 +0100
@@ -843,7 +843,7 @@
 bool CEpg::HasPVRChannel(void) const
 {
   CSingleLock lock(m_critSection);
-  return m_pvrChannel;
+  return !!m_pvrChannel;
 }

 bool CEpg::UpdatePending(void) const
--- a/xbmc/music/MusicDatabase.cpp	2019-11-19 19:54:34.751924376 +0100
+++ b/xbmc/music/MusicDatabase.cpp	2019-11-19 19:54:34.995922292 +0100
@@ -4605,7 +4605,7 @@
       if(ADDON::CAddonMgr::Get().GetDefault(type, addon))
       {
         info = boost::dynamic_pointer_cast<ADDON::CScraper>(addon);
-        return (info);
+        return !!(info);
       }
       else
         return false;
--- a/xbmc/guilib/GUIVisualisationControl.cpp	2019-11-19 20:25:19.691705762 +0100
+++ b/xbmc/guilib/GUIVisualisationControl.cpp	2019-11-19 20:25:19.707705639 +0100
@@ -53,7 +53,7 @@
   {
   case GUI_MSG_GET_VISUALISATION:
     message.SetPointer(m_addon.get());
-    return m_addon;
+    return !!m_addon;
   case GUI_MSG_VISUALISATION_RELOAD:
     FreeResources(true);
     return true;
