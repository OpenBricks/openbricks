--- remote-0.5.0/Makefile	2012-12-26 02:16:57.000000000 +0100
+++ remote-0.4.0/Makefile	2007-10-06 14:58:06.000000000 +0200
@@ -1,54 +1,20 @@
 #
-# Remote Control plugin for the Video Disk Recorder
-#
-# Copyright (C) 2002-2010 Oliver Endriss <o.endriss@gmx.de>
-#
-# This program is free software; you can redistribute it and/or
-# modify it under the terms of the GNU General Public License
-# as published by the Free Software Foundation; either version 2
-# of the License, or (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
-# Or, point your browser to http://www.gnu.org/licenses/old-licenses/gpl-2.0.html
+# Makefile for a Video Disk Recorder plugin
 #
+# $Id$
 
 # The official name of this plugin.
 # This name will be used in the '-P...' option of VDR to load the plugin.
 # By default the main source file also carries this name.
-
+# IMPORTANT: the presence of this macro is important for the Make.config
+# file. So it must be defined, even if it is not used here!
+#
 PLUGIN = remote
 
 ### The version number of this plugin (taken from the main source file):
 
 VERSION = $(shell grep 'static const char \*VERSION *=' $(PLUGIN).c | awk '{ print $$6 }' | sed -e 's/[";]//g')
 
-### The directory environment:
-# Use package data if installed...otherwise assume we're under the VDR source directory:
-PKGCFG = $(if $(VDRDIR),$(shell pkg-config --variable=$(1) $(VDRDIR)/vdr.pc),$(shell pkg-config --variable=$(1) vdr || pkg-config --variable=$(1) ../../../vdr.pc))
-LIBDIR = $(DESTDIR)$(call PKGCFG,libdir)
-LOCDIR = $(DESTDIR)$(call PKGCFG,locdir)
-#
-TMPDIR ?= /tmp
-
-### The compiler options:
-
-export CFLAGS   = $(call PKGCFG,cflags)
-export CXXFLAGS = $(call PKGCFG,cxxflags)
-
-### The version number of VDR's plugin API:
-
-APIVERSION = $(call PKGCFG,apiversion)
-
-
-### Backward compatibility stuff
-ifeq ($(LOCDIR),)
 ### The C++ compiler and options:
 
 CXX      ?= g++
@@ -58,6 +24,7 @@
 
 VDRDIR = ../../..
 LIBDIR = ../../lib
+TMPDIR = /tmp
 
 ### Allow user defined options to overwrite defaults:
 
@@ -72,38 +39,16 @@
 APIVERSION = $(shell sed -ne '/define VDRVERSION/s/^.*"\(.*\)".*$$/\1/p' $(VDRDIR)/config.h)
 endif
 
-LOCDIR = $(VDRDIR)/locale
-
-### Includes and Defines (add further entries here):
-
-DEFINES += -D_GNU_SOURCE
-
-INCLUDES += -I$(VDRDIR)/include
-
-### Run 'install' for target 'all':
-
-all: install
-
-ifeq ($(shell grep 'I18N_DEFAULT_LOCALE' $(VDRDIR)/i18n.h),)
-OLD_I18N = 1
-
-i18n install-i18n:
-	
-endif
-endif # compatibility section
-
 ### The name of the distribution archive:
 
 ARCHIVE = $(PLUGIN)-$(VERSION)
 PACKAGE = vdr-$(ARCHIVE)
 
-### The name of the shared object file:
-
-SOFILE = libvdr-$(PLUGIN).so
-
 ### Includes and Defines (add further entries here):
 
-DEFINES += -DPLUGIN_NAME_I18N='"$(PLUGIN)"'
+INCLUDES += -I$(VDRDIR)/include
+
+DEFINES += -D_GNU_SOURCE -DPLUGIN_NAME_I18N='"$(PLUGIN)"'
 
 ### optional components
 DEFINES += -DREMOTE_FEATURE_LIRC
@@ -111,18 +56,14 @@
 
 ### The object files (add further files here):
 
-OBJS = $(PLUGIN).o
-OBJS += ttystatus.o
+OBJS = $(PLUGIN).o ttystatus.o
 ifneq (, $(findstring REMOTE_FEATURE_TCPIP, $(DEFINES)))
 OBJS += remotetcp.o
 endif
-ifneq ($(OLD_I18N),)
-OBJS += i18n.o
-endif
 
 ### The main target:
 
-all: $(SOFILE) i18n
+all: libvdr-$(PLUGIN).so i18n
 
 ### Implicit rules:
 
@@ -140,43 +81,41 @@
 
 ### Internationalization (I18N):
 
-ifeq ($(OLD_I18N),)
+ifneq ($(shell grep 'LOCALEDIR' $(VDRDIR)/Makefile),)
 PODIR     = po
+LOCALEDIR = $(VDRDIR)/locale
 I18Npo    = $(wildcard $(PODIR)/*.po)
 I18Nmo    = $(addsuffix .mo, $(foreach file, $(I18Npo), $(basename $(file))))
-I18Nmsgs  = $(addprefix $(LOCDIR)/, $(addsuffix /LC_MESSAGES/vdr-$(PLUGIN).mo, $(notdir $(foreach file, $(I18Npo), $(basename $(file))))))
+I18Ndirs  = $(notdir $(foreach file, $(I18Npo), $(basename $(file))))
 I18Npot   = $(PODIR)/$(PLUGIN).pot
 
 %.mo: %.po
 	msgfmt -c -o $@ $<
 
 $(I18Npot): $(wildcard *.c)
-	xgettext -C -cTRANSLATORS --no-wrap -F -k -ktr -ktrNOOP --package-name=vdr-$(PLUGIN) --package-version=$(VERSION) --msgid-bugs-address='<o.endriss@gmx.de>' -o $@ `ls $^`
-
-%.po: $(I18Npot)
-	msgmerge -U --no-wrap --no-location --backup=none -q -N $@ $<
-	@touch $@
+	xgettext -C -cTRANSLATORS --no-wrap -F -k -ktr -ktrNOOP --msgid-bugs-address='<o.endriss@gmx.de>' -o $@ $(wildcard *.c)
 
-$(I18Nmsgs): $(LOCDIR)/%/LC_MESSAGES/vdr-$(PLUGIN).mo: $(PODIR)/%.mo
-	install -D -m644 $< $@
+$(I18Npo): $(I18Npot)
+	msgmerge -U --no-wrap -F --backup=none -q $@ $<
 
-.PHONY: i18n
-i18n: $(I18Nmo) $(I18Npot)
-
-install-i18n: $(I18Nmsgs)
+i18n: $(I18Nmo)
+	@mkdir -p $(LOCALEDIR)
+	for i in $(I18Ndirs); do\
+	    mkdir -p $(LOCALEDIR)/$$i/LC_MESSAGES;\
+	    cp $(PODIR)/$$i.mo $(LOCALEDIR)/$$i/LC_MESSAGES/vdr-$(PLUGIN).mo;\
+	    done
+else
+OBJS += i18n.o
+i18n: ;
 endif
 
 ### Targets:
 
-$(SOFILE): $(OBJS)
-	$(CXX) $(CXXFLAGS) $(LDFLAGS) -shared $(OBJS) -o $@
+libvdr-$(PLUGIN).so: $(OBJS)
+	$(CXX) $(CXXFLAGS) -shared $(OBJS) -o $@
+	@cp $@ $(LIBDIR)/$@.$(APIVERSION)
 
-install-lib: $(SOFILE)
-	install -D $^ $(LIBDIR)/$^.$(APIVERSION)
-
-install: install-lib install-i18n
-
-dist: $(I18Npo) clean
+dist: clean
 	@-rm -rf $(TMPDIR)/$(ARCHIVE)
 	@mkdir $(TMPDIR)/$(ARCHIVE)
 	@cp -a * $(TMPDIR)/$(ARCHIVE)
@@ -186,11 +125,4 @@
 
 clean:
 	@-rm -f $(PODIR)/*.mo $(PODIR)/*.pot
-	@-rm -f $(OBJS) $(DEPFILE) *.so *.tgz core* *~
-
-env:
-	@echo "Configuration:"
-	@echo "  APIVERSION $(APIVERSION)"
-	@echo "  CXX $(CXX)  CXXFLAGS $(CXXFLAGS)"
-	@echo "  VDRDIR $(VDRDIR)  LIBDIR $(LIBDIR)  LOCDIR $(LOCDIR)"
-
+	@-rm -f *.o $(DEPFILE) *.so *.tgz core* *~
