#!/bin/sh

. config/options
get_meta $1

cd $PKG_BUILD_DIR


kodi_set_feature() {
  PKG="$1"
  OPT="$2"
  CFG_LIST="$3"
  pkg_uses $PKG $OPT && val=ON || val=OFF
  for cfg in $CFG_LIST; do
    KODI_FEATURES="$KODI_FEATURES -DENABLE_$cfg=$val"
  done
  return 0
}


KODI_FEATURES="\
  -DENABLE_LIRC=ON \
  -DENABLE_UPNP=ON \
  -DENABLE_OPENSSL=ON \
  -DENABLE_OPTICAL=ON \
  -DENABLE_EVENTCLIENTS=ON \
  -DENABLE_INTERNAL_CROSSGUID=OFF \
"

case "$TARGET_PLATFORM" in
  amlogic) KODI_FEATURES="$KODI_FEATURES -DENABLE_AML=ON" ;;
esac

kodi_set_feature $1 "opengl"            "OPENGL"
kodi_set_feature $1 "opengles"          "OPENGLES"
kodi_set_feature $1 "xorg"              "X"
kodi_set_feature $1 "sdl"               "SDL"
kodi_set_feature $1 "vdpau"             "VDPAU"
kodi_set_feature $1 "vaapi"             "VAAPI"
kodi_set_feature $1 "alsa"              "ALSA"
kodi_set_feature $1 "pulse"             "PULSEAUDIO"
kodi_set_feature $1 "airtunes"          "AIRTUNES"
kodi_set_feature $1 "dvdcss"            "DVDCSS"
kodi_set_feature $1 "nonfree"           "NONFREE"

#kodi_set_feature $1 "libcec"            "CEC"
#kodi_set_feature $1 "libnfs"            "NFS"
#kodi_set_feature $1 "zeroconf"          "AVAHI"
#kodi_set_feature $1 "webserver"         "MICROHTTPD"

#kodi_set_feature $1 "openmax"           "openmax"
#kodi_set_feature $1 "joystick"          "joystick"
#kodi_set_feature $1 "xvba"              "xvba"
#kodi_set_feature $1 "crystalhd"         "crystalhd"
#kodi_set_feature $1 "bluray"            "libbluray"
#kodi_set_feature $1 "rtmp"              "rtmp"
#kodi_set_feature $1 "afpclient"         "afpclient"
#kodi_set_feature $1 "airplay"           "airplay"
#kodi_set_feature $1 "screensavers"      "rsxs"
#kodi_set_feature $1 "gstreamer"         "gstreamer"


# build host tools
setup_toolchain host
for tool in JsonSchemaBuilder TexturePacker; do
  cd tools/depends/native/$tool/src
  do_autoconf
  do_configure host
  make
  make prefix=$ROOT/$PKG_BUILD_DIR/tools install
  cd -
done

#  build package
setup_toolchain target
rm -rf .build
mkdir -p .build
cd .build

# Hack: enable SSE2 for i386 target
[ "$TARGET_ARCH" = i386 ] && export CFLAGS="$CFLAGS -msse2"
[ "$TARGET_ARCH" = i386 ] && export CXXFLAGS="$CXXFLAGS -msse2"

if pkg_uses $1 gbm ; then
  KODI_FEATURES="$KODI_FEATURES -DCORE_PLATFORM_NAME=gbm"
  pkg_uses $1 opengl && KODI_FEATURES="$KODI_FEATURES -DGBM_RENDER_SYSTEM=gl"
  pkg_uses $1 opengles && KODI_FEATURES="$KODI_FEATURES -DGBM_RENDER_SYSTEM=gles"
  export CFLAGS="$CFLAGS -DMESA_EGL_NO_X11_HEADERS"
  export CXXFLAGS="$CXXFLAGS -DMESA_EGL_NO_X11_HEADERS"
elif [ $TARGET_MACHINE = raspberrypi ] || [ $TARGET_MACHINE = raspberrypi2 ] ; then
  KODI_FEATURES="$KODI_FEATURES -DCORE_PLATFORM_NAME=rbpi"
fi

echo "KODI_FEATURES=$KODI_FEATURES"

HOST_SYS="/usr" \
BUILD_SYS="$ROOT/$TOOLCHAIN" \
STAGING_LIBDIR=$LIB_PREFIX/lib \
STAGING_INCDIR=$LIB_PREFIX/include \
cmake \
  -DCMAKE_SYSTEM_NAME=Linux \
  -DCMAKE_FIND_ROOT_PATH=$LIB_PREFIX \
  -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY \
  -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY \
  -DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER \
  -DCMAKE_FIND_NO_INSTALL_PREFIX=1 \
  -DCMAKE_INSTALL_PREFIX=/usr \
  -DENABLE_CCACHE=OFF \
  -DKODI_DEPENDSBUILD=0 \
  -DWITH_CPU=$TARGET_CPU \
  -DWITH_ARCH=$TARGET_ARCH \
  -DCORE_SYSTEM_NAME=linux \
  -DLIBDVDCSS_URL=$ROOT/sources/libdvdcss/libdvdcss-1.4.0+1~2f12236.tar.bz2 \
  -DLIBDVDNAV_URL=$ROOT/sources/libdvdnav/libdvdnav-5.0.4+1~43b5f81.tar.bz2 \
  -DLIBDVDREAD_URL=$ROOT/sources/libdvdread/libdvdread-5.90.0+1~17d99db.tar.bz2 \
  $KODI_FEATURES -DGIT_VERSION="$PKG_URL_REV-$PKG_REV" \
  -DENABLE_APP_AUTONAME=OFF \
  ../


#cmake --build . -- VERBOSE=1
make
make DESTDIR=../.install install
cd -

strip_bins .install/usr/lib/kodi
strip_libs .install/usr/lib/kodi

# copy default settings
cp -P $ROOT/$PACKAGES/$PKG_SECTION/$1/scripts/kodi-default-settings.sh \
  .install/usr/lib/kodi/

# hook into global home page
mkdir -p .install/srv/www/htdocs
cp $ROOT/$PACKAGES/$PKG_SECTION/$1/www/* .install/srv/www/htdocs


# ToDo: Check if this is really needed...
for i in .install/usr/lib/kodi/system/players/VideoPlayer/*.so; do
  lib=$(basename $i)
  ln -sf kodi/system/players/VideoPlayer/$lib .install/usr/lib/$lib
done

exit 0
