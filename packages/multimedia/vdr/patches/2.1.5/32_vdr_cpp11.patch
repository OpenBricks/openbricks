--- vdr/ci.c.orig	2014-03-07 11:32:52.000000000 +0100
+++ vdr/ci.c	2014-03-07 12:07:33.000000000 +0100
@@ -864,7 +864,7 @@
 #pragma pack(1)
      struct tTime { uint16_t mjd; uint8_t h, m, s; short offset; };
 #pragma pack()
-     tTime T = { .mjd = htons(MJD), .h = DEC2BCD(tm_gmt.tm_hour), .m = DEC2BCD(tm_gmt.tm_min), .s = DEC2BCD(tm_gmt.tm_sec), .offset = short(htons(tm_loc.tm_gmtoff / 60)) };
+     tTime T = {}; T.mjd = htons(MJD); T.h = DEC2BCD(tm_gmt.tm_hour); T.m = DEC2BCD(tm_gmt.tm_min); T.s = DEC2BCD(tm_gmt.tm_sec); T.offset = short(htons(tm_loc.tm_gmtoff / 60));
      bool OldDumpTPDUDataTransfer = DumpTPDUDataTransfer;
      DumpTPDUDataTransfer &= DumpDateTime;
      if (DumpDateTime)
@@ -1004,7 +1004,7 @@
                  case DCC_SET_MMI_MODE:
                       if (l == 2 && *++d == MM_HIGH_LEVEL) {
                          struct tDisplayReply { uint8_t id; uint8_t mode; };
-                         tDisplayReply dr = { .id = DRI_MMI_MODE_ACK, .mode = MM_HIGH_LEVEL };
+                         tDisplayReply dr = {}; dr.id = DRI_MMI_MODE_ACK; dr.mode = MM_HIGH_LEVEL;
                          dbgprotocol("Slot %d: ==> Display Reply (%d)\n", Tc()->CamSlot()->SlotNumber(), SessionId());
                          SendData(AOT_DISPLAY_REPLY, 2, (uint8_t *)&dr);
                          }
