--- vdr-1.7.40/vdr.c.org	2013-03-13 22:39:51.863929588 +0100
+++ vdr-1.7.40/vdr.c	2013-03-13 22:39:54.687929638 +0100
@@ -295,31 +295,35 @@
                     return 2;
           case 'd' | 0x100: {
                     char *s = optarg;
-                    int n = strtol(s, &s, 10);
-                    if (n <= 0 || n >= PATH_MAX) { // PATH_MAX includes the terminating 0
-                       fprintf(stderr, "vdr: invalid directory path length: %s\n", optarg);
-                       return 2;
+                    if (*s != ',') {
+                       int n = strtol(s, &s, 10);
+                       if (n <= 0 || n >= PATH_MAX) { // PATH_MAX includes the terminating 0
+                          fprintf(stderr, "vdr: invalid directory path length: %s\n", optarg);
+                          return 2;
+                          }
+                       DirectoryPathMax = n;
                        }
-                    DirectoryPathMax = n;
                     if (!*s)
                        break;
                     if (*s++ != ',') {
                        fprintf(stderr, "vdr: invalid delimiter: %s\n", optarg);
                        return 2;
                        }
-                    n = strtol(s, &s, 10);
-                    if (n <= 0 || n > NAME_MAX) { // NAME_MAX excludes the terminating 0
-                       fprintf(stderr, "vdr: invalid directory name length: %s\n", optarg);
-                       return 2;
+                    if (*s != ',') {
+                       int n = strtol(s, &s, 10);
+                       if (n <= 0 || n > NAME_MAX) { // NAME_MAX excludes the terminating 0
+                          fprintf(stderr, "vdr: invalid directory name length: %s\n", optarg);
+                          return 2;
+                          }
+                       DirectoryNameMax = n;
                        }
-                    DirectoryNameMax = n;
                     if (!*s)
                        break;
                     if (*s++ != ',') {
                        fprintf(stderr, "vdr: invalid delimiter: %s\n", optarg);
                        return 2;
                        }
-                    n = strtol(s, &s, 10);
+                    int n = strtol(s, &s, 10);
                     if (n != 0 && n != 1) {
                        fprintf(stderr, "vdr: invalid directory encoding: %s\n", optarg);
                        return 2;
@@ -498,7 +502,9 @@
                "                           the maximum directory name length (default: %d);\n"
                "                           the optional ENC can be 0 or 1, and controls whether\n"
                "                           special characters in directory names are encoded as\n"
-               "                           hex values (default: 0)\n"
+               "                           hex values (default: 0); if PATH or NAME are left\n"
+               "                           empty (as in \",,1\" to only set ENC), the defaults\n"
+               "                           apply\n"
                "            --edit=REC     cut recording REC and exit\n"
                "  -E FILE,  --epgfile=FILE write the EPG data into the given FILE (default is\n"
                "                           '%s' in the video directory)\n"
