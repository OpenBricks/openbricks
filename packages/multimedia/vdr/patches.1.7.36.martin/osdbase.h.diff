--- vdr-1.7.36.orig/osdbase.h	2013-01-26 15:55:49.000000000 +0100
+++ vdr-1.7.36/osdbase.h	2013-01-26 15:56:02.000000000 +0100
@@ -15,6 +15,10 @@
 #include "skins.h"
 #include "tools.h"
 
+#if defined (USE_SETUP) && defined (USE_PINPLUGIN)
+#include "submenu.h"
+#endif /* SETUP & PINPLUGIN */
+
 enum eOSState { osUnknown,
                 osContinue,
                 osSchedule,
@@ -30,6 +34,9 @@
                 osStopRecord,
                 osStopReplay,
                 osCancelEdit,
+#ifdef USE_VASARAJANAULOJA
+				osCancelTransfer,
+#endif /* VASARAJANAULOJA */
                 osSwitchDvb,
                 osBack,
                 osEnd,
@@ -51,16 +58,26 @@
   char *text;
   eOSState state;
   bool selectable;
+#if defined (USE_SETUP) && defined (USE_PINPLUGIN)
+  cSubMenuNode* subMenu;
+#endif /* SETUP & PINPLUGIN */
 protected:
   bool fresh;
 public:
   cOsdItem(eOSState State = osUnknown);
   cOsdItem(const char *Text, eOSState State = osUnknown, bool Selectable = true);
+#if defined (USE_SETUP) && defined (USE_PINPLUGIN)
+  cOsdItem(const char *Text, eOSState State, cSubMenuNode* SubMenu);
+#endif /* SETUP & PINPLUGIN */
   virtual ~cOsdItem();
   bool Selectable(void) const { return selectable; }
   void SetText(const char *Text, bool Copy = true);
   void SetSelectable(bool Selectable);
   void SetFresh(bool Fresh);
+#if defined (USE_SETUP) && defined (USE_PINPLUGIN)
+  void SetSubMenu(cSubMenuNode* SubMenu) { subMenu = SubMenu; }
+  cSubMenuNode* SubMenu() { return subMenu; }
+#endif /* SETUP & PINPLUGIN */
   const char *Text(void) const { return text; }
   virtual void Set(void) {}
   virtual void SetMenuItem(cSkinDisplayMenu *DisplayMenu, int Index, bool Current, bool Selectable);
@@ -99,6 +116,10 @@
   int digit;
   bool hasHotkeys;
   void DisplayHelp(bool Force = false);
+#ifdef USE_VASARAJANAULOJA
+  int key_nr;
+  cTimeMs lastActivity;
+#endif /* VASARAJANAULOJA */
 protected:
   void SetDisplayMenu(void);
   cSkinDisplayMenu *DisplayMenu(void) { return displayMenu; }
@@ -136,6 +157,9 @@
   void Ins(cOsdItem *Item, bool Current = false, cOsdItem *Before = NULL);
   virtual void Display(void);
   virtual eOSState ProcessKey(eKeys Key);
+#ifdef USE_GRAPHTFT
+  virtual const char* MenuKind() { return "MenuUnknown"; }
+#endif /* GRAPHTFT */
   };
 
 #endif //__OSDBASE_H
