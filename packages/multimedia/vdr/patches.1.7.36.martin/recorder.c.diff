--- vdr-1.7.36.orig/recorder.c	2013-01-26 15:55:49.000000000 +0100
+++ vdr-1.7.36/recorder.c	2013-01-26 15:56:02.000000000 +0100
@@ -46,6 +46,16 @@
      Type = 0x06;
      }
   frameDetector = new cFrameDetector(Pid, Type);
+#ifdef USE_NALUDUMP
+  if (   Type == 0x1B // MPEG4 video
+      && (Setup.DumpNaluFill ? (strstr(FileName, "NALUKEEP") == NULL) : (strstr(FileName, "NALUDUMP") != NULL))) { // MPEG4
+     isyslog("Starting NALU fill dumper");
+     naluStreamProcessor = new cNaluStreamProcessor();
+     naluStreamProcessor->SetPid(Pid);
+     }
+  else
+     naluStreamProcessor = NULL;
+#endif // USE_NALUDUMP
   index = NULL;
   fileSize = 0;
   lastDiskSpaceCheck = time(NULL);
@@ -67,6 +77,14 @@
 cRecorder::~cRecorder()
 {
   Detach();
+#ifdef USE_NALUDUMP
+  if (naluStreamProcessor) {
+     long long int TotalPackets = naluStreamProcessor->GetTotalPackets();
+     long long int DroppedPackets = naluStreamProcessor->GetDroppedPackets();
+     isyslog("NALU fill dumper: %lld of %lld packets dropped, %lli%%", DroppedPackets, TotalPackets, TotalPackets ? DroppedPackets*100/TotalPackets : 0);
+     delete naluStreamProcessor;
+     }
+#endif // USE_NALUDUMP
   delete index;
   delete fileName;
   delete frameDetector;
@@ -155,11 +173,39 @@
                              fileSize += TS_SIZE;
                              }
                        }
+#ifndef USE_NALUDUMP
                     if (recordFile->Write(b, Count) < 0) {
                        LOG_ERROR_STR(fileName->Name());
                        break;
                        }
                     fileSize += Count;
+#else
+                    if (naluStreamProcessor) {
+                       naluStreamProcessor->PutBuffer(b, Count);
+                       bool Fail = false;
+                       while (true) {
+                             int OutLength = 0;
+                             uchar *OutData = naluStreamProcessor->GetBuffer(OutLength);
+                             if (!OutData || OutLength <= 0)
+                                break;
+                             if (recordFile->Write(OutData, OutLength) < 0) {
+                                LOG_ERROR_STR(fileName->Name());
+                                Fail = true;
+                                break;
+                                }
+                             fileSize += OutLength;
+                             }
+                       if (Fail)
+                          break;
+                       }
+                    else {
+                    if (recordFile->Write(b, Count) < 0) {
+                          LOG_ERROR_STR(fileName->Name());
+                          break;
+                       }
+                       fileSize += Count;
+                    }
+#endif // USE_NALUDUMP
                     t = time(NULL);
                     }
                  }
