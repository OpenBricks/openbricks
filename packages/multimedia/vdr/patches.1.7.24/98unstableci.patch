--- /root/openbricks/build/build.i386.eglibc/vdr-1.7.24/device.h	2012-02-25 17:02:14.786376323 +0100
+++ vdr-1.7.24/device.h	2012-02-25 16:38:54.566375605 +0100
@@ -410,12 +410,10 @@
        ///< Opens a file handle for the given filter data.
        ///< A derived device that provides section data must
        ///< implement this function.
-#ifdef USE_MCLI
   virtual int ReadFilter(int Handle, void *Buffer, size_t Length);
        ///< Read from a handle for the given filter data.
        ///< a derived class need not implement this function, because this
        ///< is done by the default implementation.
-#endif /* MCLI */
   virtual void CloseFilter(int Handle);
        ///< Closes a file handle that has previously been opened
        ///< by OpenFilter(). If this is as simple as calling close(Handle),
@@ -434,6 +432,13 @@
 public:
   virtual bool HasCi(void);
          ///< Returns true if this device has a Common Interface.
+#define INTERNAL_CAM_DEVICES_PATCH 1
+  virtual bool HasInternalCam(void) { return false; }
+         ///< Returns true if this device handles encrypted channels itself
+         ///< without VDR assistance. This can be e.g. when the device is a
+         ///< client that gets the stream from another VDR instance that has
+         ///< already decrypted the stream. In this case ProvidesChannel()
+         ///< shall check whether the channel can be decrypted.
   void SetCamSlot(cCamSlot *CamSlot);
          ///< Sets the given CamSlot to be used with this device.
 
