>From fbb5187b2823fba696fb1dae73c03280d97b3ee1 Mon Sep 17 00:00:00 2001
From: Davide Cavalca <davide@geexbox.org>
Date: Sun, 16 Jan 2011 15:48:15 +0100
Subject: [PATCH 3/4] hwclock: implement --systz


Signed-off-by: Davide Cavalca <davide@geexbox.org>
---
 include/usage.src.h  |    5 +++--
 util-linux/hwclock.c |   29 ++++++++++++++++++++++++++---
 2 files changed, 29 insertions(+), 5 deletions(-)

diff --git a/include/usage.src.h b/include/usage.src.h
index a4776a2..ca47137 100644
--- a/include/usage.src.h
+++ b/include/usage.src.h
@@ -1597,12 +1597,12 @@ INSERT
 
 #define hwclock_trivial_usage \
 	IF_FEATURE_HWCLOCK_LONG_OPTIONS( \
-       "[-r|--show] [-s|--hctosys] [-w|--systohc]" \
+       "[-r|--show] [-s|--hctosys] [-w|--systohc] [-t|--systz]" \
        " [-l|--localtime] [-u|--utc]" \
        " [-f FILE]" \
 	) \
 	IF_NOT_FEATURE_HWCLOCK_LONG_OPTIONS( \
-       "[-r] [-s] [-w] [-l] [-u] [-f FILE]" \
+       "[-r] [-s] [-w] [-t] [-l] [-u] [-f FILE]" \
 	)
 #define hwclock_full_usage "\n\n" \
        "Query and set hardware clock (RTC)\n" \
@@ -1610,6 +1610,7 @@ INSERT
      "\n	-r	Show hardware clock time" \
      "\n	-s	Set system time from hardware clock" \
      "\n	-w	Set hardware clock to system time" \
+     "\n	-t	Set the system time based on the current timezone" \
      "\n	-u	Hardware clock is in UTC" \
      "\n	-l	Hardware clock is in local time" \
      "\n	-f FILE	Use specified device (e.g. /dev/rtc2)" \
diff --git a/util-linux/hwclock.c b/util-linux/hwclock.c
index 922dd05..ad022c5 100644
--- a/util-linux/hwclock.c
+++ b/util-linux/hwclock.c
@@ -223,12 +223,32 @@ static void from_sys_clock(const char **pp_rtcname, int utc)
 		close(rtc);
 }
 
+static void set_system_clock_timezone(int utc)
+{
+	struct timeval tv;
+	struct tm *broken;
+	struct timezone tz;
+
+	gettimeofday(&tv, NULL);
+	broken = localtime(&tv.tv_sec);
+	tz.tz_minuteswest = timezone/60;
+	if (broken->tm_isdst)
+		tz.tz_minuteswest -= 60;
+	tz.tz_dsttime = 0;
+	gettimeofday(&tv, NULL);
+	if (!utc)
+		tv.tv_sec += tz.tz_minuteswest * 60;
+	if (settimeofday(&tv, &tz))
+		bb_perror_msg_and_die("settimeofday");
+}
+
 #define HWCLOCK_OPT_LOCALTIME   0x01
 #define HWCLOCK_OPT_UTC         0x02
 #define HWCLOCK_OPT_SHOW        0x04
 #define HWCLOCK_OPT_HCTOSYS     0x08
 #define HWCLOCK_OPT_SYSTOHC     0x10
-#define HWCLOCK_OPT_RTCFILE     0x20
+#define HWCLOCK_OPT_SYSTZ       0x20
+#define HWCLOCK_OPT_RTCFILE     0x40
 
 int hwclock_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int hwclock_main(int argc UNUSED_PARAM, char **argv)
@@ -244,12 +264,13 @@ int hwclock_main(int argc UNUSED_PARAM, char **argv)
 		"show\0"      No_argument "r"
 		"hctosys\0"   No_argument "s"
 		"systohc\0"   No_argument "w"
+		"systz\0"     No_argument "t"
 		"file\0"      Required_argument "f"
 		;
 	applet_long_options = hwclock_longopts;
 #endif
-	opt_complementary = "r--ws:w--rs:s--wr:l--u:u--l";
-	opt = getopt32(argv, "lurswf:", &rtcname);
+	opt_complementary = "r--wst:w--rst:s--wrt:t--rswt:l--u:u--l";
+	opt = getopt32(argv, "lurswtf:", &rtcname);
 
 	/* If -u or -l wasn't given check if we are using utc */
 	if (opt & (HWCLOCK_OPT_UTC | HWCLOCK_OPT_LOCALTIME))
@@ -261,6 +282,8 @@ int hwclock_main(int argc UNUSED_PARAM, char **argv)
 		to_sys_clock(&rtcname, utc);
 	else if (opt & HWCLOCK_OPT_SYSTOHC)
 		from_sys_clock(&rtcname, utc);
+	else if (opt & HWCLOCK_OPT_SYSTZ)
+		set_system_clock_timezone(utc);
 	else
 		/* default HWCLOCK_OPT_SHOW */
 		show_clock(&rtcname, utc);
-- 
1.7.2.3

