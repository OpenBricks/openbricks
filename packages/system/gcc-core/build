#!/bin/sh

. config/options

$SCRIPTS/unpack gcc-$TOOLCHAIN_TYPE
get_meta gcc-$TOOLCHAIN_TYPE

cd $PKG_BUILD_DIR
rm -rf objdir-$1
mkdir -p objdir-$1
cd objdir-$1

setup_toolchain host

if [ "$TOOLCHAIN_GOLD_LINKER" = yes ]; then
  GOLD_CONFIG="--enable-gold"
else
  GOLD_CONFIG="--disable-gold"
fi

EXTRA_FLAGS=
if [ "$ARM_HARDFLOAT_ABI" = yes ]; then
  EXTRA_FLAGS="$EXTRA_FLAGS --with-float=hard"
fi

case "$FPU_OPTIMIZATIONS" in
  vfp2)
    EXTRA_FLAGS="$EXTRA_FLAGS --with-fpu=vfp"
    ;;

  vfp3)
    EXTRA_FLAGS="$EXTRA_FLAGS --with-fpu=vfpv3"
    ;;

  vfp3-d16)
    EXTRA_FLAGS="$EXTRA_FLAGS --with-fpu=vfpv3-d16"
    ;;

  neon)
    EXTRA_FLAGS="$EXTRA_FLAGS --with-fpu=neon"
    ;;

  vfp4)
    EXTRA_FLAGS="$EXTRA_FLAGS --with-fpu=vfpv4"
    ;;

  neon-vfp4)
    EXTRA_FLAGS="$EXTRA_FLAGS --with-fpu=neon-vfpv4"
    ;;
esac

if [ "$TARGET_LIBC" = "glibc" ] ; then
  export gcc_cv_libc_provides_ssp=yes
fi


CFLAGS_COMMON="-Wno-format-Wno-unused -Wno-parentheses -Wno-uninitialized -Wno-switch -Wno-sign-compare"
CFLAGS_EXTRA="-Wno-expansion-to-defined -Wno-int-in-bool-context -Wno-shift-negative-value -Wno-tautological-compare"
CXXFLAGS_EXTRA="-Wno-implicit-fallthrough -Wno-deprecated -Wno-literal-suffix -Wno-nonnull -Wno-switch-bool"

CFLAGS="$CFLAGS $CFLAGS_COMMON $CFLAGS_EXTRA" \
CXXFLAGS="$CXXFLAGS $CFLAGS_COMMON $CXXFLAGS_EXTRA" \
../configure --host=$HOST_NAME \
             --build=$HOST_NAME \
             --target=$TARGET_NAME \
             --prefix=/usr \
             --with-sysroot=$SYSROOT_PREFIX \
             --with-local-prefix=${LIB_PREFIX#$SYSROOT_PREFIX} \
             --with-gmp=$ROOT/$TOOLCHAIN \
             --with-mpfr=$ROOT/$TOOLCHAIN \
             --with-ppl=$ROOT/$TOOLCHAIN \
             --with-cloog=$ROOT/$TOOLCHAIN \
             --with-libelf=$ROOT/$TOOLCHAIN \
             --with-mpc=$ROOT/$TOOLCHAIN \
             --with-as=$TARGET_AS \
             --with-ld=$TARGET_LD \
             --enable-languages=c \
             --disable-libmudflap \
             $GOLD_CONFIG \
             --enable-ld \
             --enable-plugin \
             --enable-lto \
             --disable-libssp \
             --disable-libgomp \
             --disable-shared \
             --disable-multilib \
             --disable-threads \
             --without-headers \
             --with-newlib \
             --disable-decimal-float \
             --disable-nls \
             --disable-ppl-version-check \
             --enable-cloog-backend=isl \
             --with-host-libstdcxx="-lstdc++ -lsupc++ -lm" \
             $EXTRA_FLAGS
make all-gcc all-target-libgcc

out_dir=$ROOT/$BUILD/$1/.install
rm -rf $out_dir
mkdir -p $out_dir
make install-gcc install-target-libgcc DESTDIR="$out_dir"

# uClibc insists on linking against libgcc_eh which isn't compiled because of --disable-shared
# Simply link libgcc_eh.a to libgcc.a
ln -sf libgcc.a "$out_dir/usr/lib/gcc/$TARGET_NAME/$GCC_VERSION/libgcc_eh.a"
fix_libs "$out_dir" toolchain
