#!/bin/sh

. config/options

unset LDFLAGS

#MAKEFLAGS=-j1

cd $(kernel_path)
# remove cache file present in 4.1x+ kernels
rm -f .cache.mk

case $TARGET_ARCH in
  i386|x86_64)  IMAGE=bzImage  ;;
  mips|powerpc) IMAGE=vmlinux  ;;
  powerpc64)    IMAGE=zImage   ;;
  arm)
    . $CONFIG_MACHINE/meta
    [ -n "$MACHINE_UBOOT_CONFIG" -a -z "$MACHINE_UBOOT_ZIMAGE" ] && IMAGE=uImage || IMAGE=zImage
    ;;
esac

export CROSS_COMPILE=$TARGET_PREFIX

make $IMAGE $MACHINE_EXTRA_TARGETS
make modules

if [ -n "$MACHINE_DTS" ] ; then
  for i in $MACHINE_DTS ; do
    make $i.dtb
  done
fi

install_dir="$PWD/.install"
debug_dir="$PWD/.install-debuginfo/usr/lib/debug"

boot_dir="$install_dir/boot"
firmware_dir="$install_dir/lib/firmware"
kmod_dir="$install_dir/lib/modules/$(kernel_version)"

rm -rf $install_dir $debug_dir
mkdir -p $firmware_dir $boot_dir $debug_dir

make modules_install \
  INSTALL_MOD_PATH=.install \
  DEPMOD=$ROOT/$TOOLCHAIN/bin/depmod

mv -f $firmware_dir $install_dir

rm -f $kmod_dir/build $kmod_dir/source $kmod_dir/modules.*
strip_kmods $kmod_dir $debug_dir

cp ./modules.* $kmod_dir
ln -sf $(kernel_version) $install_dir/lib/modules/latest

if [ -n "$MACHINE_DTS" ] ; then
  for i in $MACHINE_DTS ; do
    cp arch/$TARGET_ARCH/boot/dts/$i.dtb $boot_dir
  done
fi

case $TARGET_ARCH in
  arm|powerpc64)
    if [ "$TARGET_PLATFORM" = bcm2708 ]; then
      # add raspberry pi magic for kernel revisions below 3.18
      #cat first32k.bin arch/$TARGET_ARCH/boot/Image > $boot_dir/kernel.img

      [ -e scripts/mkknlimg ] && scr_dir=./scripts || scr_dir=. 
      $scr_dir/mkknlimg --dtok arch/$TARGET_ARCH/boot/$IMAGE $boot_dir/kernel.img
      mkdir -p $boot_dir/overlays
      if [ -d arch/$TARGET_ARCH/boot/dts/overlays ]; then
        cp arch/$TARGET_ARCH/boot/dts/overlays/*.dtb* $boot_dir/overlays/
        cp arch/$TARGET_ARCH/boot/dts/overlays/README $boot_dir/overlays/
      else
        mv -f $boot_dir/*overlay.dtb $boot_dir/overlays/
      fi
    elif [ "$TARGET_PLATFORM" = bcm2709 ]; then
      [ -e scripts/mkknlimg ] && scr_dir=./scripts || scr_dir=. 
      $scr_dir/mkknlimg --dtok arch/$TARGET_ARCH/boot/$IMAGE $boot_dir/kernel7.img
      mkdir -p $boot_dir/overlays
      if [ -d arch/$TARGET_ARCH/boot/dts/overlays ]; then
        cp arch/$TARGET_ARCH/boot/dts/overlays/*.dtb* $boot_dir/overlays/
        cp arch/$TARGET_ARCH/boot/dts/overlays/README $boot_dir/overlays/
      else
        mv -f $boot_dir/*overlay.dtb $boot_dir/overlays/
      fi
    else
      cp arch/$TARGET_ARCH/boot/$IMAGE $boot_dir
    fi
    ;;
  mips|powerpc)
    cp vmlinux $boot_dir
    $STRIP $boot_dir/$IMAGE
    ;;
  i386|x86_64)
    cp arch/$TARGET_ARCH/boot/$IMAGE $boot_dir/vmlinuz
    ;;
esac

if [ "$SAVE_SPACE" = yes ]; then
  mv .install ../.install-temp-linux-modules
  mv .install-debuginfo ../.install-debuginfo-temp-linux-modules
  make clean
  make modules_prepare
  mv ../.install-temp-linux-modules .install
  mv ../.install-debuginfo-temp-linux-modules .install-debuginfo
fi

exit 0
