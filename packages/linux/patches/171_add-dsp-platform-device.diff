diff -Naur linux-2.6.35.8/arch/arm/mach-omap2/dsp.c linux-2.6.35.8a/arch/arm/mach-omap2/dsp.c
--- linux-2.6.35.8/arch/arm/mach-omap2/dsp.c	1970-01-01 01:00:00.000000000 +0100
+++ linux-2.6.35.8a/arch/arm/mach-omap2/dsp.c	2010-11-22 14:52:36.755831178 +0100
@@ -0,0 +1,85 @@
+/*
+ * TI's OMAP DSP platform device registration
+ *
+ * Copyright (C) 2005-2006 Texas Instruments, Inc.
+ * Copyright (C) 2009 Nokia Corporation
+ *
+ * Written by Hiroshi DOYU <Hiroshi.DOYU@nokia.com>
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#include <linux/platform_device.h>
+#include "prm.h"
+#include "cm.h"
+#ifdef CONFIG_BRIDGE_DVFS
+#include <plat/omap-pm.h>
+#endif
+
+#include <plat/dsp.h>
+
+extern phys_addr_t omap_dsp_get_mempool_base(void);
+
+static struct platform_device *omap_dsp_pdev;
+
+static struct omap_dsp_platform_data omap_dsp_pdata __initdata = {
+#ifdef CONFIG_BRIDGE_DVFS
+	.dsp_set_min_opp = omap_pm_dsp_set_min_opp,
+	.dsp_get_opp = omap_pm_dsp_get_opp,
+	.cpu_set_freq = omap_pm_cpu_set_freq,
+	.cpu_get_freq = omap_pm_cpu_get_freq,
+#endif
+	.dsp_prm_read = prm_read_mod_reg,
+	.dsp_prm_write = prm_write_mod_reg,
+	.dsp_prm_rmw_bits = prm_rmw_mod_reg_bits,
+	.dsp_cm_read = cm_read_mod_reg,
+	.dsp_cm_write = cm_write_mod_reg,
+	.dsp_cm_rmw_bits = cm_rmw_mod_reg_bits,
+};
+
+static int __init omap_dsp_init(void)
+{
+	struct platform_device *pdev;
+	int err = -ENOMEM;
+	struct omap_dsp_platform_data *pdata = &omap_dsp_pdata;
+
+	pdata->phys_mempool_base = omap_dsp_get_mempool_base();
+
+	if (pdata->phys_mempool_base) {
+		pdata->phys_mempool_size = CONFIG_TIDSPBRIDGE_MEMPOOL_SIZE;
+		pr_info("%s: %x bytes @ %x\n", __func__,
+			pdata->phys_mempool_size, pdata->phys_mempool_base);
+	}
+
+	pdev = platform_device_alloc("omap-dsp", -1);
+	if (!pdev)
+		goto err_out;
+
+	err = platform_device_add_data(pdev, pdata, sizeof(*pdata));
+	if (err)
+		goto err_out;
+
+	err = platform_device_add(pdev);
+	if (err)
+		goto err_out;
+
+	omap_dsp_pdev = pdev;
+	return 0;
+
+err_out:
+	platform_device_put(pdev);
+	return err;
+}
+module_init(omap_dsp_init);
+
+static void __exit omap_dsp_exit(void)
+{
+	platform_device_unregister(omap_dsp_pdev);
+}
+module_exit(omap_dsp_exit);
+
+MODULE_AUTHOR("Hiroshi DOYU");
+MODULE_DESCRIPTION("TI's OMAP DSP platform device registration");
+MODULE_LICENSE("GPL");
diff -Naur linux-2.6.35.8/arch/arm/mach-omap2/io.c linux-2.6.35.8a/arch/arm/mach-omap2/io.c
--- linux-2.6.35.8/arch/arm/mach-omap2/io.c	2010-10-29 06:52:43.000000000 +0200
+++ linux-2.6.35.8a/arch/arm/mach-omap2/io.c	2010-11-22 14:53:40.791581236 +0100
@@ -47,6 +47,8 @@
 #include "clockdomains.h"
 #include <plat/omap_hwmod.h>
 
+#include <plat/dsp.h>
+
 /*
  * The machine specific code may provide the extra mapping besides the
  * default mapping provided here.
@@ -243,6 +245,7 @@
 	omap_sram_init();
 	omapfb_reserve_sdram();
 	omap_vram_reserve_sdram();
+        omap_dsp_reserve_sdram();
 }
 
 #ifdef CONFIG_ARCH_OMAP2420
diff -Naur linux-2.6.35.8/arch/arm/mach-omap2/Makefile linux-2.6.35.8a/arch/arm/mach-omap2/Makefile
--- linux-2.6.35.8/arch/arm/mach-omap2/Makefile	2010-11-22 14:51:40.815541152 +0100
+++ linux-2.6.35.8a/arch/arm/mach-omap2/Makefile	2010-11-22 14:52:25.697995424 +0100
@@ -94,6 +94,10 @@
 i2c-omap-$(CONFIG_I2C_OMAP)		:= i2c.o
 obj-y					+= $(i2c-omap-m) $(i2c-omap-y)
 
+ifneq ($(CONFIG_TIDSPBRIDGE),)
+obj-y					+= dsp.o
+endif
+
 # Specific board support
 obj-$(CONFIG_MACH_OMAP_GENERIC)		+= board-generic.o
 obj-$(CONFIG_MACH_OMAP_H4)		+= board-h4.o
diff -Naur linux-2.6.35.8/arch/arm/plat-omap/devices.c linux-2.6.35.8a/arch/arm/plat-omap/devices.c
--- linux-2.6.35.8/arch/arm/plat-omap/devices.c	2010-10-29 06:52:43.000000000 +0200
+++ linux-2.6.35.8a/arch/arm/plat-omap/devices.c	2010-11-22 14:53:05.076838173 +0100
@@ -15,6 +15,7 @@
 #include <linux/platform_device.h>
 #include <linux/io.h>
 #include <linux/slab.h>
+#include <linux/bootmem.h>
 
 #include <mach/hardware.h>
 #include <asm/mach-types.h>
@@ -394,6 +395,34 @@
 static inline void omap_init_wdt(void) {}
 #endif
 
+#if defined(CONFIG_TIDSPBRIDGE) || defined(CONFIG_TIDSPBRIDGE_MODULE)
+
+static unsigned long omap_dsp_phys_mempool_base;
+
+void omap_dsp_reserve_sdram(void)
+{
+	void *va;
+	unsigned long size = CONFIG_TIDSPBRIDGE_MEMPOOL_SIZE;
+
+	if (!size)
+		return;
+
+	va = __alloc_bootmem_nopanic(size, SZ_1M, 0);
+	if (!va) {
+		pr_err("%s: Failed to bootmem allocation(%lu bytes)\n",
+		       __func__, size);
+		return;
+	}
+	omap_dsp_phys_mempool_base = virt_to_phys(va);
+}
+
+unsigned long omap_dsp_get_mempool_base(void)
+{
+	return omap_dsp_phys_mempool_base;
+}
+EXPORT_SYMBOL(omap_dsp_get_mempool_base);
+#endif
+
 /*
  * This gets called after board-specific INIT_MACHINE, and initializes most
  * on-chip peripherals accessible on this board (except for few like USB):
diff -Naur linux-2.6.35.8/arch/arm/plat-omap/include/plat/dsp.h linux-2.6.35.8a/arch/arm/plat-omap/include/plat/dsp.h
--- linux-2.6.35.8/arch/arm/plat-omap/include/plat/dsp.h	1970-01-01 01:00:00.000000000 +0100
+++ linux-2.6.35.8a/arch/arm/plat-omap/include/plat/dsp.h	2010-11-22 14:53:19.063541970 +0100
@@ -0,0 +1,31 @@
+#ifndef __OMAP_DSP_H__
+#define __OMAP_DSP_H__
+
+#include <linux/types.h>
+
+struct omap_dsp_platform_data {
+	void (*dsp_set_min_opp) (u8 opp_id);
+	u8 (*dsp_get_opp) (void);
+	void (*cpu_set_freq) (unsigned long f);
+	unsigned long (*cpu_get_freq) (void);
+	unsigned long mpu_speed[6];
+
+	/* functions to write and read PRCM registers */
+	void (*dsp_prm_write)(u32, s16 , u16);
+	u32 (*dsp_prm_read)(s16 , u16);
+	u32 (*dsp_prm_rmw_bits)(u32, u32, s16, s16);
+	void (*dsp_cm_write)(u32, s16 , u16);
+	u32 (*dsp_cm_read)(s16 , u16);
+	u32 (*dsp_cm_rmw_bits)(u32, u32, s16, s16);
+
+	phys_addr_t phys_mempool_base;
+	phys_addr_t phys_mempool_size;
+};
+
+#if defined(CONFIG_TIDSPBRIDGE) || defined(CONFIG_TIDSPBRIDGE_MODULE)
+extern void omap_dsp_reserve_sdram(void);
+#else
+static inline void omap_dsp_reserve_sdram(void) { }
+#endif
+
+#endif
