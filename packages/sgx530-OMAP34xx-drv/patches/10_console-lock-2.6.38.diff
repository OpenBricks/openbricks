diff -Naur sgx530-OMAP34xx-drv-4.03.00.01/services4/3rdparty/dc_omap3430_linux/omaplfb_displayclass.c sgx530-OMAP34xx-drv-4.03.00.01a/services4/3rdparty/dc_omap3430_linux/omaplfb_displayclass.c
--- sgx530-OMAP34xx-drv-4.03.00.01/services4/3rdparty/dc_omap3430_linux/omaplfb_displayclass.c	2011-01-27 09:51:19.000000000 +0100
+++ sgx530-OMAP34xx-drv-4.03.00.01a/services4/3rdparty/dc_omap3430_linux/omaplfb_displayclass.c	2011-02-12 17:28:52.959841621 +0100
@@ -235,9 +235,17 @@
 {
 	int res;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38)
+	console_lock();
+#else
 	acquire_console_sem();
+#endif
 	res = fb_blank(psDevInfo->psLINFBInfo, 0);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38)
+	console_unlock();
+#else
 	release_console_sem();
+#endif
 #if !defined (CONFIG_OMAP2_DSS)
 	if (res != 0 && res != -EINVAL)
 	{
@@ -1118,7 +1126,11 @@
 	OMAP_ERROR eError = OMAP_ERROR_GENERIC;
 	unsigned long FBSize;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38)
+	console_lock();
+#else
 	acquire_console_sem();
+#endif
 
 	if (fb_idx < 0 || fb_idx >= num_registered_fb)
 	{
@@ -1254,7 +1266,11 @@
 errModPut:
 	module_put(psLINFBOwner);
 errRelSem:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38)
+	console_unlock();
+#else
 	release_console_sem();
+#endif
 	return eError;
 }
 
@@ -1263,7 +1279,11 @@
 	struct fb_info *psLINFBInfo = psDevInfo->psLINFBInfo;
 	struct module *psLINFBOwner;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38)
+	console_lock();
+#else
 	acquire_console_sem();
+#endif
 
 	psLINFBOwner = psLINFBInfo->fbops->owner;
 
@@ -1274,7 +1294,11 @@
 
 	module_put(psLINFBOwner);
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38)
+	console_unlock();
+#else
 	release_console_sem();
+#endif
 }
 
 OMAP_ERROR OMAPLFBInit(void)
diff -Naur sgx530-OMAP34xx-drv-4.03.00.01/services4/3rdparty/dc_ti81xx_linux/omaplfb_displayclass.c sgx530-OMAP34xx-drv-4.03.00.01a/services4/3rdparty/dc_ti81xx_linux/omaplfb_displayclass.c
--- sgx530-OMAP34xx-drv-4.03.00.01/services4/3rdparty/dc_ti81xx_linux/omaplfb_displayclass.c	2011-01-27 09:51:19.000000000 +0100
+++ sgx530-OMAP34xx-drv-4.03.00.01a/services4/3rdparty/dc_ti81xx_linux/omaplfb_displayclass.c	2011-02-12 17:27:40.555832844 +0100
@@ -235,10 +235,17 @@
 {
 	int res;
 #ifdef FBDEV_PRESENT
-
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38)
+	console_lock();
+#else
 	acquire_console_sem();
+#endif
 	res = fb_blank(psDevInfo->psLINFBInfo, 0);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38)
+	console_unlock();
+#else
 	release_console_sem();
+#endif
 #if !defined (CONFIG_OMAP2_DSS)
 	if (res != 0 && res != -EINVAL)
 	{
@@ -1119,7 +1126,11 @@
 	OMAP_ERROR eError = OMAP_ERROR_GENERIC;
 	unsigned long FBSize;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38)
+	console_lock();
+#else
 	acquire_console_sem();
+#endif
 
 	if (fb_idx < 0 || fb_idx >= num_registered_fb)
 	{
@@ -1255,7 +1266,11 @@
 errModPut:
 	module_put(psLINFBOwner);
 errRelSem:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38)
+	console_unlock();
+#else
 	release_console_sem();
+#endif
 	return eError;
 }
 
@@ -1264,7 +1279,11 @@
 	struct fb_info *psLINFBInfo = psDevInfo->psLINFBInfo;
 	struct module *psLINFBOwner;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38)
+	console_lock();
+#else
 	acquire_console_sem();
+#endif
 
 	psLINFBOwner = psLINFBInfo->fbops->owner;
 
@@ -1275,7 +1294,11 @@
 
 	module_put(psLINFBOwner);
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38)
+	console_unlock();
+#else
 	release_console_sem();
+#endif
 }
 
 OMAP_ERROR OMAPLFBInit(void)
diff -Naur sgx530-OMAP34xx-drv-4.03.00.01/services4/3rdparty/linux_framebuffer/pvrlfb_displayclass.c sgx530-OMAP34xx-drv-4.03.00.01a/services4/3rdparty/linux_framebuffer/pvrlfb_displayclass.c
--- sgx530-OMAP34xx-drv-4.03.00.01/services4/3rdparty/linux_framebuffer/pvrlfb_displayclass.c	2011-01-27 09:51:19.000000000 +0100
+++ sgx530-OMAP34xx-drv-4.03.00.01a/services4/3rdparty/linux_framebuffer/pvrlfb_displayclass.c	2011-02-12 17:29:49.004082771 +0100
@@ -153,9 +153,17 @@
 	psDevInfo = GetAnchorPtr();
 
 	/* Try and unblank display */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38)
+	console_lock();
+#else
 	acquire_console_sem();
+#endif
 	(void) fb_blank(psDevInfo->psLINFBInfo, 0);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38)
+	console_unlock();
+#else
 	release_console_sem();
+#endif
 
 }
 #endif	/* !defined(PVRLFB_NO_AUTO_UNBLANK) */
@@ -197,9 +205,17 @@
 	}
 
 	/* Try and unblank display */
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38)
+	console_lock();
+#else
 	acquire_console_sem();
+#endif
 	(void) fb_blank(psDevInfo->psLINFBInfo, 0);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38)
+	console_unlock();
+#else
 	release_console_sem();
+#endif
 #endif	/* !defined(PVRLFB_NO_AUTO_UNBLANK) */
 
 	return (PVRSRV_OK);
@@ -576,7 +592,11 @@
 	LFB_ERROR eError = LFB_ERROR_GENERIC;
 	unsigned long screenSize;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38)
+	console_lock();
+#else
 	acquire_console_sem();
+#endif
 
 	if (fb_idx < 0 || fb_idx >= num_registered_fb)
 	{
@@ -664,7 +684,11 @@
 errModPut:
 	module_put(psLINFBOwner);
 errRelSem:
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38)
+	console_unlock();
+#else
 	release_console_sem();
+#endif
 	return eError;
 }
 
@@ -673,7 +697,11 @@
 	struct fb_info *psLINFBInfo = psDevInfo->psLINFBInfo;
 	struct module *psLINFBOwner;
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38)
+	console_lock();
+#else
 	acquire_console_sem();
+#endif
 
 	psLINFBOwner = psLINFBInfo->fbops->owner;
 
@@ -684,7 +712,11 @@
 
 	module_put(psLINFBOwner);
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,38)
+	console_unlock();
+#else
 	release_console_sem();
+#endif
 }
 
 
