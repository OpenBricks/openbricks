diff -Naur pygame-1.9.1/src/camera.h pygame-1.9.1a/src/camera.h
--- pygame-1.9.1/src/camera.h	2008-10-10 04:37:10.000000000 +0200
+++ pygame-1.9.1a/src/camera.h	2011-02-20 16:32:08.803173679 +0100
@@ -39,7 +39,6 @@
 
     #include <asm/types.h>          /* for videodev2.h */
 
-    #include <linux/videodev.h>
     #include <linux/videodev2.h>
 #endif
 
diff -Naur pygame-1.9.1/src/camera_v4l.c pygame-1.9.1a/src/camera_v4l.c
--- pygame-1.9.1/src/camera_v4l.c	2008-09-28 06:31:42.000000000 +0200
+++ pygame-1.9.1a/src/camera_v4l.c	2011-02-20 16:32:53.643171497 +0100
@@ -25,47 +25,6 @@
  
 int v4l_open_device (PyCameraObject* self)
 {
-    struct stat st;
-    struct video_capability cap;
-    struct video_mbuf buf;
-    
-    if (-1 == stat (self->device_name, &st)) {
-        PyErr_Format(PyExc_SystemError, "Cannot identify '%s': %d, %s",
-            self->device_name, errno, strerror (errno));
-        return 0;
-    }
-
-    if (!S_ISCHR (st.st_mode)) {
-        PyErr_Format(PyExc_SystemError, "%s is no device",self->device_name);
-        return 0;
-    }
-
-    self->fd = open (self->device_name, O_RDWR /* required | O_NONBLOCK */, 0);
-
-    if (-1 == self->fd) {
-        PyErr_Format(PyExc_SystemError, "Cannot open '%s': %d, %s",
-            self->device_name, errno, strerror (errno));
-        return 0;
-    }
-    
-    if(ioctl(self->fd, VIDIOCGCAP, cap) == -1) {
-        PyErr_Format(PyExc_SystemError, "%s is not a V4L device",
-            self->device_name);        
-	return 0;
-    }
-    
-    if(!(cap.type & VID_TYPE_CAPTURE)) {
-        PyErr_Format(PyExc_SystemError, "%s is not a video capture device",
-            self->device_name);
-        return 0;
-    }
-    
-    if( ioctl(self->fd , VIDIOCGMBUF , buf ) == -1 ) {
-        PyErr_Format(PyExc_SystemError, "%s does not support streaming i/o",
-            self->device_name);
-	return 0;
-    }
-    
     return 1;
 }
 
