From 48c0d84da639add11aed99de1e1fdc407d2a1ccc Mon Sep 17 00:00:00 2001
From: Rob Clark <rob@ti.com>
Date: Wed, 19 May 2010 17:33:46 -0500
Subject: [PATCH 15/21] use GstQueryBuffers to get buffer requirements

---
 sys/v4l2/gstv4l2sink.c |   41 +++++++++++++++++++++++++++++++++++++++++
 sys/v4l2/gstv4l2sink.h |    1 +
 2 files changed, 42 insertions(+), 0 deletions(-)

diff --git a/sys/v4l2/gstv4l2sink.c b/sys/v4l2/gstv4l2sink.c
index c0d45a0..0ede4ad 100644
--- a/sys/v4l2/gstv4l2sink.c
+++ b/sys/v4l2/gstv4l2sink.c
@@ -303,6 +303,7 @@ gst_v4l2sink_init (GstV4l2Sink * v4l2sink, GstV4l2SinkClass * klass)
 
   /* number of buffers requested */
   v4l2sink->num_buffers = PROP_DEF_QUEUE_SIZE;
+  v4l2sink->num_buffers_can_change = TRUE;
   v4l2sink->min_queued_bufs = PROP_DEF_MIN_QUEUED_BUFS;
 
   v4l2sink->probed_caps = NULL;
@@ -657,6 +658,7 @@ static gboolean
 gst_v4l2sink_set_caps (GstBaseSink * bsink, GstCaps * caps)
 {
   GstV4l2Sink *v4l2sink = GST_V4L2SINK (bsink);
+  GstQuery *query;
   gint w = 0, h = 0;
   struct v4l2_fmtdesc *format;
   guint fps_n, fps_d;
@@ -703,6 +705,40 @@ gst_v4l2sink_set_caps (GstBaseSink * bsink, GstCaps * caps)
     return FALSE;
   }
 
+  /* query to find if anyone upstream using these buffers has any
+   * minimum requirements:
+   */
+  query = gst_query_new_buffers (caps);
+  if (gst_element_query (GST_ELEMENT (v4l2sink), query)) {
+    gint min_buffers, min_width, min_height;
+
+    gst_query_parse_buffers_count (query, &min_buffers);
+
+    /* XXX need to account for some buffers used by queue, etc.. probably
+     * queue should handle query, pass on to sink pad, and then add some
+     * number of buffers to the min, so this value is dynamic depending
+     * on the pipeline?
+     */
+    if (min_buffers != -1) {
+      min_buffers += 4;
+    }
+
+    if (min_buffers > v4l2sink->num_buffers) {
+      v4l2sink->num_buffers_can_change = FALSE;
+      v4l2sink->num_buffers = min_buffers;
+    }
+
+    gst_query_parse_buffers_dimensions (query, &min_width, &min_height);
+    if (min_width > w) {
+      w = min_width;
+    }
+    if (min_height > h) {
+      h = min_height;
+    }
+  }
+  gst_query_unref (query);
+
+
   if (!gst_v4l2_object_set_format (v4l2sink->v4l2object, format->pixelformat, w,
           h)) {
     /* error already posted */
@@ -785,6 +821,11 @@ gst_v4l2sink_buffer_alloc (GstBaseSink * bsink, guint64 offset, guint size,
       GST_INFO_OBJECT (v4l2sink, "outputting buffers via mmap()");
 
       if (v4l2sink->num_buffers != v4l2sink->pool->buffer_count) {
+        if (!v4l2sink->num_buffers_can_change) {
+          GST_WARNING_OBJECT (v4l2sink,
+              "I can't handle a differing number of buffers!!!!");
+          return GST_FLOW_ERROR;
+        }
         v4l2sink->num_buffers = v4l2sink->pool->buffer_count;
         g_object_notify (G_OBJECT (v4l2sink), "queue-size");
       }
diff --git a/sys/v4l2/gstv4l2sink.h b/sys/v4l2/gstv4l2sink.h
index 07a32bf..dcb97de 100644
--- a/sys/v4l2/gstv4l2sink.h
+++ b/sys/v4l2/gstv4l2sink.h
@@ -58,6 +58,7 @@ struct _GstV4l2Sink {
   GstCaps *current_caps;        /* the current negotiated caps */
   GstV4l2BufferPool *pool;
   guint32 num_buffers;
+  gboolean num_buffers_can_change;
   guint32 min_queued_bufs;
 
   /*
-- 
1.7.1

