From 38351373acf434fd55d448c0dc936becaaa3ea83 Mon Sep 17 00:00:00 2001
From: Luciana Fujii Pontello <luciana.fujii@collabora.co.uk>
Date: Fri, 19 Aug 2011 09:56:54 -0300
Subject: [PATCH 051/154] omxcamerabinsrc: Add property "camera-device"

Added property "camera-device" to choose the stream source in
omx_camera.
---
 gst/camerabin2/gstomxcamerabinsrc.c |   51 ++++++++++++++++++++++++++++++++++-
 gst/camerabin2/gstomxcamerabinsrc.h |    3 ++
 2 files changed, 53 insertions(+), 1 deletions(-)

diff --git a/gst/camerabin2/gstomxcamerabinsrc.c b/gst/camerabin2/gstomxcamerabinsrc.c
index f572771..20b851c 100644
--- a/gst/camerabin2/gstomxcamerabinsrc.c
+++ b/gst/camerabin2/gstomxcamerabinsrc.c
@@ -53,15 +53,42 @@ enum
 {
   PROP_0,
   PROP_SOURCE_FILTER,
-  PROP_ALLOCATE_BUFFERS
+  PROP_ALLOCATE_BUFFERS,
+  PROP_CAMERA_DEVICE
 };
 
+typedef enum
+{
+  OmxCameraPrimary,
+  OmxCameraSecondary,
+  OmxCameraStereo
+} GstOmxCamerabinDevice;
+
 GST_DEBUG_CATEGORY (omx_camera_bin_src_debug);
 #define GST_CAT_DEFAULT omx_camera_bin_src_debug
 
 GST_BOILERPLATE (GstOmxCameraBinSrc, gst_omx_camera_bin_src,
     GstBaseCameraBinSrc, GST_TYPE_BASE_CAMERA_SRC);
 
+GType
+gst_omx_camerabin_device_get_type (void)
+{
+  static GType type = 0;
+
+  if (!type) {
+    static GEnumValue vals[] = {
+      {OmxCameraPrimary, "Primary", "primary"},
+      {OmxCameraSecondary, "Secondary", "secondary"},
+      {OmxCameraStereo, "Stereo", "stereo"},
+      {0, NULL, NULL},
+    };
+
+    type = g_enum_register_static ("GstOmxCamerabinDevice", vals);
+  }
+
+  return type;
+}
+
 static void
 gst_omx_camera_bin_src_dispose (GObject * object)
 {
@@ -119,6 +146,13 @@ gst_omx_camera_bin_src_set_property (GObject * object,
         g_object_set (self->video_source, "allocate-buffers", allocate, NULL);
       break;
     }
+    case PROP_CAMERA_DEVICE:
+    {
+      gint device = g_value_get_enum (value);
+      if (self->video_source)
+        g_object_set (self->video_source, "device", device, NULL);
+      break;
+    }
     default:
       G_OBJECT_WARN_INVALID_PROPERTY_ID (self, prop_id, pspec);
       break;
@@ -146,6 +180,16 @@ gst_omx_camera_bin_src_get_property (GObject * object,
       g_value_set_boolean (value, allocate);
       break;
     }
+    case PROP_CAMERA_DEVICE:
+    {
+      gint device = 0;
+
+      if (self->video_source)
+        g_object_get (self->video_source, "device", &device, NULL);
+
+      g_value_set_enum (value, device);
+      break;
+    }
     default:
       G_OBJECT_WARN_INVALID_PROPERTY_ID (self, prop_id, pspec);
       break;
@@ -574,6 +618,11 @@ gst_omx_camera_bin_src_class_init (GstOmxCameraBinSrcClass * klass)
       g_param_spec_boolean ("allocate-buffers", "Allocate buffers",
           "Use OMX_AllocateBuffer to allocate output buffers", FALSE,
           G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS));
+
+  g_object_class_install_property (gobject_class, PROP_CAMERA_DEVICE,
+      g_param_spec_enum ("camera-device", "Camera device",
+          "Select OMX Camera device", GST_TYPE_OMX_CAMERABIN_DEVICE, 0,
+          G_PARAM_READWRITE));
 }
 
 static void
diff --git a/gst/camerabin2/gstomxcamerabinsrc.h b/gst/camerabin2/gstomxcamerabinsrc.h
index 62079d9..d3a89fa 100644
--- a/gst/camerabin2/gstomxcamerabinsrc.h
+++ b/gst/camerabin2/gstomxcamerabinsrc.h
@@ -44,6 +44,9 @@ G_BEGIN_DECLS
 typedef struct _GstOmxCameraBinSrc GstOmxCameraBinSrc;
 typedef struct _GstOmxCameraBinSrcClass GstOmxCameraBinSrcClass;
 
+#define GST_TYPE_OMX_CAMERABIN_DEVICE (gst_omx_camerabin_device_get_type ())
+GType gst_omx_camerabin_device_get_type (void);
+
 
 /**
  * GstOmxCameraBinSrc:
-- 
1.7.5.4

