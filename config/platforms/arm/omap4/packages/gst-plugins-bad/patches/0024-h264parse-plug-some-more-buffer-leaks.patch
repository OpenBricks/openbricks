From 455e1f918e8758381d1bd5f2ce929d2a619b69d7 Mon Sep 17 00:00:00 2001
From: Mark Nauwelaerts <mark.nauwelaerts@collabora.co.uk>
Date: Wed, 25 May 2011 15:26:05 +0200
Subject: [PATCH 024/154] h264parse: plug some more buffer leaks

---
 gst/videoparsers/gsth264parse.c |    7 +++++--
 1 files changed, 5 insertions(+), 2 deletions(-)

diff --git a/gst/videoparsers/gsth264parse.c b/gst/videoparsers/gsth264parse.c
index 2073a93..d5b539e 100644
--- a/gst/videoparsers/gsth264parse.c
+++ b/gst/videoparsers/gsth264parse.c
@@ -1138,9 +1138,10 @@ gst_h264_parse_chain (GstPad * pad, GstBuffer * buffer)
         gst_byte_reader_skip_unchecked (&br, len);
       }
     }
-    if (h264parse->split_packetized)
+    if (h264parse->split_packetized) {
+      gst_buffer_unref (buffer);
       return ret;
-    else {
+    } else {
       /* nal processing in pass-through might have collected stuff;
        * ensure nothing happens with this later on */
       gst_adapter_clear (h264parse->frame_out);
@@ -1154,6 +1155,7 @@ exit:
 not_negotiated:
   {
     GST_DEBUG_OBJECT (h264parse, "insufficient data to split input");
+    gst_buffer_unref (buffer);
     return GST_FLOW_NOT_NEGOTIATED;
   }
 parse_failed:
@@ -1161,6 +1163,7 @@ parse_failed:
     if (h264parse->split_packetized) {
       GST_ELEMENT_ERROR (h264parse, STREAM, FAILED, (NULL),
           ("invalid AVC input data"));
+      gst_buffer_unref (buffer);
       return GST_FLOW_ERROR;
     } else {
       /* do not meddle to much in this case */
-- 
1.7.5.4

