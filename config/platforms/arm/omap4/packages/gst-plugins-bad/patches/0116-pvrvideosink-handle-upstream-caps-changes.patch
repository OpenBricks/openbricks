From f1bde153982810c7fe0e4b426a0391eb5433a85e Mon Sep 17 00:00:00 2001
From: Alessandro Decina <alessandro.decina@collabora.co.uk>
Date: Fri, 28 Oct 2011 08:28:35 +0200
Subject: [PATCH 116/154] pvrvideosink: handle upstream caps changes

---
 sys/pvr2d/gstpvrvideosink.c |   58 +++++++++----------------------------------
 1 files changed, 12 insertions(+), 46 deletions(-)

diff --git a/sys/pvr2d/gstpvrvideosink.c b/sys/pvr2d/gstpvrvideosink.c
index e0ee837..8177524 100644
--- a/sys/pvr2d/gstpvrvideosink.c
+++ b/sys/pvr2d/gstpvrvideosink.c
@@ -785,13 +785,13 @@ gst_pvrvideosink_setcaps (GstBaseSink * bsink, GstCaps * caps)
 
   g_mutex_lock (pvrvideosink->pool_lock);
   if (pvrvideosink->buffer_pool) {
-    g_mutex_unlock (pvrvideosink->pool_lock);
-    /* TODO: change caps of the buffer_pool */
-    GST_DEBUG_OBJECT (pvrvideosink, "changing caps not supported");
-    return FALSE;
-  } else {
-    g_mutex_unlock (pvrvideosink->pool_lock);
+    if (!gst_caps_is_equal (pvrvideosink->buffer_pool->caps, caps)) {
+      GST_INFO_OBJECT (pvrvideosink, "in set caps, pool->caps != caps");
+      gst_pvr_bufferpool_stop_running (pvrvideosink->buffer_pool);
+      pvrvideosink->buffer_pool = NULL;
+    }
   }
+  g_mutex_unlock (pvrvideosink->pool_lock);
 
   /* query to find if anyone upstream using these buffers has any
    * minimum requirements:
@@ -817,26 +817,6 @@ gst_pvrvideosink_setcaps (GstBaseSink * bsink, GstCaps * caps)
     if (min_buffers > pvrvideosink->num_buffers) {
       pvrvideosink->num_buffers = min_buffers;
     }
-#if 0
-    gst_query_parse_buffers_dimensions (query, &min_width, &min_height);
-    if (min_width > w) {
-      pvrvideosink->crop.width = w;
-      pvrvideosink->crop_fields_set |= RECT_WIDTH_SET;
-      w = min_width;
-    }
-    if (min_height > h) {
-      pvrvideosink->crop.height = h;
-      pvrvideosink->crop_fields_set |= RECT_HEIGHT_SET;
-      h = min_height;
-    }
-
-    /* clear top/left crop values.. otherwise by default display will try
-     * to center, rather than scale, the image if it is too big to fit on
-     * display
-     */
-    pvrvideosink->crop.top = v4l2sink->crop.left = 0;
-    pvrvideosink->crop_fields_set |= RECT_TOP_SET | RECT_LEFT_SET;
-#endif
   }
   gst_query_unref (query);
 
@@ -1117,30 +1097,16 @@ gst_pvrvideosink_buffer_alloc (GstBaseSink * bsink, guint64 offset, guint size,
   }
 
   g_mutex_lock (pvrvideosink->pool_lock);
-  /* initialize the buffer pool if not initialized yet (first buffer): */
-  if (G_UNLIKELY (!pvrvideosink->buffer_pool)) {
-
-    g_mutex_unlock (pvrvideosink->pool_lock);
-    /* set_caps() might not be called yet.. so just to make sure: */
-    if (!gst_pvrvideosink_setcaps (bsink, caps)) {
-      return GST_FLOW_ERROR;
-    }
-
-    /* Caps may have changed in set_caps */
-    caps = pvrvideosink->current_caps;
-    structure = gst_caps_get_structure (caps, 0);
-    if (!gst_structure_get_int (structure, "width", &width) ||
-        !gst_structure_get_int (structure, "height", &height)) {
-      GST_WARNING_OBJECT (pvrvideosink, "invalid caps for buffer allocation %"
-          GST_PTR_FORMAT, caps);
-      ret = GST_FLOW_NOT_NEGOTIATED;
-      goto beach;
+  /* initialize the buffer pool if not initialized yet */
+  if (G_UNLIKELY (!pvrvideosink->buffer_pool ||
+          pvrvideosink->buffer_pool->size != size)) {
+    if (pvrvideosink->buffer_pool) {
+      GST_INFO_OBJECT (pvrvideosink, "in buffer alloc, pool->size != size");
+      gst_pvr_bufferpool_stop_running (pvrvideosink->buffer_pool);
     }
 
     GST_LOG_OBJECT (pvrvideosink, "Creating a buffer pool with %d buffers",
         pvrvideosink->num_buffers);
-
-    g_mutex_lock (pvrvideosink->pool_lock);
     if (!(pvrvideosink->buffer_pool =
             gst_pvr_bufferpool_new (GST_ELEMENT (pvrvideosink),
                 caps, 8, size, pvrvideosink->dcontext->pvr_context))) {
-- 
1.7.5.4

