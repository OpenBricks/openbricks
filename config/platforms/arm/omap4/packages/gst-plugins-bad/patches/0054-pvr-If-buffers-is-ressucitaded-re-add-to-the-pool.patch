From ec8f670922206289d17631299f7754ec356546e4 Mon Sep 17 00:00:00 2001
From: Luciana Fujii Pontello <luciana.fujii@collabora.co.uk>
Date: Thu, 1 Sep 2011 18:21:56 -0300
Subject: [PATCH 054/154] pvr: If buffers is ressucitaded, re-add to the pool

---
 sys/pvr2d/gstpvrbufferpool.c |   18 +++++++++++++++---
 sys/pvr2d/gstpvrbufferpool.h |    2 +-
 2 files changed, 16 insertions(+), 4 deletions(-)

diff --git a/sys/pvr2d/gstpvrbufferpool.c b/sys/pvr2d/gstpvrbufferpool.c
index badab3e..40accb0 100644
--- a/sys/pvr2d/gstpvrbufferpool.c
+++ b/sys/pvr2d/gstpvrbufferpool.c
@@ -40,7 +40,7 @@ gst_ducati_buffer_get (GstDucatiBuffer * self)
 }
 
 static GstDucatiBuffer *
-gst_ducati_buffer_new (GstPvrBufferPool * pool)
+gst_ducati_buffer_new (GstPvrBufferPool * pool, gint index)
 {
   GstDucatiBuffer *self = (GstDucatiBuffer *)
       gst_mini_object_new (GST_TYPE_DUCATIBUFFER);
@@ -50,10 +50,13 @@ gst_ducati_buffer_new (GstPvrBufferPool * pool)
 
   self->pool = (GstPvrBufferPool *)
       gst_mini_object_ref (GST_MINI_OBJECT (pool));
+  self->index = index;
 
   GST_BUFFER_DATA (self) =
       gst_ducati_alloc_2d (pool->padded_width, pool->padded_height, &sz);
   GST_BUFFER_SIZE (self) = sz;
+  GST_LOG_OBJECT (pool->element, "width=%d, height=%d and size=%d",
+      pool->padded_width, pool->padded_height, sz);
 
   gst_buffer_set_caps (GST_BUFFER (self), pool->caps);
 
@@ -66,6 +69,7 @@ gst_ducati_buffer_finalize (GstDucatiBuffer * self)
 {
   GstPvrBufferPool *pool = self->pool;
   gboolean resuscitated = FALSE;
+  gint index = self->index;
 
   GST_LOG_OBJECT (pool->element, "finalizing buffer %p", self);
 
@@ -81,6 +85,14 @@ gst_ducati_buffer_finalize (GstDucatiBuffer * self)
   }
   GST_PVR_BUFFERPOOL_UNLOCK (pool);
 
+  if (resuscitated) {
+    GST_LOG_OBJECT (pool->element, "reviving buffer %p, %d", self, index);
+    gst_buffer_ref (GST_BUFFER (self));
+    GST_BUFFER_SIZE (self) = 0;
+    pool->buffers[index] = self;
+  }
+
+
   if (!resuscitated) {
     GST_LOG_OBJECT (pool->element,
         "buffer %p (data %p, len %u) not recovered, freeing",
@@ -153,7 +165,7 @@ gst_pvr_bufferpool_new (GstElement * element, GstCaps * caps, gint num_buffers)
 
   /* now, map the buffers */
   for (i = 0; i < num_buffers; i++) {
-    self->buffers[i] = gst_ducati_buffer_new (self);
+    self->buffers[i] = gst_ducati_buffer_new (self, i);
     self->num_live_buffers++;
     g_async_queue_push (self->avail_buffers, self->buffers[i]);
   }
@@ -202,7 +214,7 @@ gst_pvr_bufferpool_get (GstPvrBufferPool * self, GstBuffer * orig)
      */
     buf = g_async_queue_try_pop (self->avail_buffers);
     if (!buf)
-      buf = gst_ducati_buffer_new (self);
+      buf = gst_ducati_buffer_new (self, 0);
     buf->orig = orig;
   }
   GST_PVR_BUFFERPOOL_UNLOCK (self);
diff --git a/sys/pvr2d/gstpvrbufferpool.h b/sys/pvr2d/gstpvrbufferpool.h
index f38f05e..98f6343 100644
--- a/sys/pvr2d/gstpvrbufferpool.h
+++ b/sys/pvr2d/gstpvrbufferpool.h
@@ -74,7 +74,7 @@ struct _GstDucatiBuffer {
 
   GstPvrBufferPool *pool; /* buffer-pool that this buffer belongs to */
   GstBuffer       *orig;     /* original buffer, if we need to copy output */
-  GstDucatiBuffer *next;     /* next in freelist, if not in use */
+  gint index;               /* index */
 };
 
 GstBuffer * gst_ducati_buffer_get (GstDucatiBuffer * self);
-- 
1.7.5.4

