From 9f1425970ac912c071a4f96557f1134d0f3cbd60 Mon Sep 17 00:00:00 2001
From: Luciana Fujii Pontello <luciana.fujii@collabora.co.uk>
Date: Sun, 11 Sep 2011 20:30:34 -0300
Subject: [PATCH 058/154] pvr: Alloc buffer with 1 dimension alloc

Alloc the requested size for the buffer using gst_ducati_alloc_1d.
---
 sys/pvr2d/gstpvrbufferpool.c |   12 ++++++------
 sys/pvr2d/gstpvrbufferpool.h |    3 ++-
 sys/pvr2d/gstpvrvideosink.c  |    2 +-
 3 files changed, 9 insertions(+), 8 deletions(-)

diff --git a/sys/pvr2d/gstpvrbufferpool.c b/sys/pvr2d/gstpvrbufferpool.c
index 40accb0..9dad41b 100644
--- a/sys/pvr2d/gstpvrbufferpool.c
+++ b/sys/pvr2d/gstpvrbufferpool.c
@@ -44,7 +44,6 @@ gst_ducati_buffer_new (GstPvrBufferPool * pool, gint index)
 {
   GstDucatiBuffer *self = (GstDucatiBuffer *)
       gst_mini_object_new (GST_TYPE_DUCATIBUFFER);
-  guint sz;
 
   GST_LOG_OBJECT (pool->element, "creating buffer %p in pool %p", self, pool);
 
@@ -52,11 +51,10 @@ gst_ducati_buffer_new (GstPvrBufferPool * pool, gint index)
       gst_mini_object_ref (GST_MINI_OBJECT (pool));
   self->index = index;
 
-  GST_BUFFER_DATA (self) =
-      gst_ducati_alloc_2d (pool->padded_width, pool->padded_height, &sz);
-  GST_BUFFER_SIZE (self) = sz;
+  GST_BUFFER_DATA (self) = gst_ducati_alloc_1d (pool->size);
+  GST_BUFFER_SIZE (self) = pool->size;
   GST_LOG_OBJECT (pool->element, "width=%d, height=%d and size=%d",
-      pool->padded_width, pool->padded_height, sz);
+      pool->padded_width, pool->padded_height, pool->size);
 
   gst_buffer_set_caps (GST_BUFFER (self), pool->caps);
 
@@ -145,7 +143,8 @@ static GstMiniObjectClass *bufferpool_parent_class = NULL;
  * @num_buffers:  the requested number of buffers in the pool
  */
 GstPvrBufferPool *
-gst_pvr_bufferpool_new (GstElement * element, GstCaps * caps, gint num_buffers)
+gst_pvr_bufferpool_new (GstElement * element, GstCaps * caps, gint num_buffers,
+    gint size)
 {
   gint i;
   GstPvrBufferPool *self = (GstPvrBufferPool *)
@@ -156,6 +155,7 @@ gst_pvr_bufferpool_new (GstElement * element, GstCaps * caps, gint num_buffers)
   gst_structure_get_int (s, "width", &self->padded_width);
   gst_structure_get_int (s, "height", &self->padded_height);
   self->caps = gst_caps_ref (caps);
+  self->size = size;
 
   self->buffers = g_new0 (GstDucatiBuffer *, num_buffers);
   self->avail_buffers = g_async_queue_new ();
diff --git a/sys/pvr2d/gstpvrbufferpool.h b/sys/pvr2d/gstpvrbufferpool.h
index 98f6343..678ae73 100644
--- a/sys/pvr2d/gstpvrbufferpool.h
+++ b/sys/pvr2d/gstpvrbufferpool.h
@@ -49,6 +49,7 @@ struct _GstPvrBufferPool
 
   /* output (padded) size including any codec padding: */
   gint padded_width, padded_height;
+  gint size;
 
   GstCaps *caps;
   GMutex *lock;
@@ -61,7 +62,7 @@ struct _GstPvrBufferPool
 };
 
 GstPvrBufferPool * gst_pvr_bufferpool_new (GstElement * element,
-    GstCaps * caps, gint num_buffers);
+    GstCaps * caps, gint num_buffers, gint size);
 void gst_pvr_bufferpool_destroy (GstPvrBufferPool * pool);
 GstDucatiBuffer * gst_pvr_bufferpool_get (GstPvrBufferPool * self,
     GstBuffer * orig);
diff --git a/sys/pvr2d/gstpvrvideosink.c b/sys/pvr2d/gstpvrvideosink.c
index 53a3918..445868d 100644
--- a/sys/pvr2d/gstpvrvideosink.c
+++ b/sys/pvr2d/gstpvrvideosink.c
@@ -630,7 +630,7 @@ gst_pvrvideosink_buffer_alloc (GstBaseSink * bsink, guint64 offset, guint size,
 
     if (!(pvrvideosink->buffer_pool =
             gst_pvr_bufferpool_new (GST_ELEMENT (pvrvideosink),
-                caps, pvrvideosink->num_buffers))) {
+                caps, pvrvideosink->num_buffers, size))) {
       return GST_FLOW_ERROR;
     }
     /* Notify application to set xwindow id now */
-- 
1.7.5.4

