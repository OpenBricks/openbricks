From 53bc9659cfc35e84d20f040cdae01e42a0e33d28 Mon Sep 17 00:00:00 2001
From: Alessandro Decina <alessandro.decina@collabora.co.uk>
Date: Wed, 28 Sep 2011 18:43:17 +0200
Subject: [PATCH 098/154] pvrvideosink: build  PVR2DMEMINFO from
 PVRSRV_CLIENT_MEM_INFO structure

Avoids needing a patch in sgx-lib just for this.
---
 sys/pvr2d/gstpvrvideosink.c |   40 +++++++++++++++++++++++++++++++++-------
 sys/pvr2d/gstpvrvideosink.h |    2 +-
 2 files changed, 34 insertions(+), 8 deletions(-)

diff --git a/sys/pvr2d/gstpvrvideosink.c b/sys/pvr2d/gstpvrvideosink.c
index b99569b..666676c 100644
--- a/sys/pvr2d/gstpvrvideosink.c
+++ b/sys/pvr2d/gstpvrvideosink.c
@@ -30,12 +30,17 @@
 /* Debugging category */
 #include <gst/gstinfo.h>
 
+#define LINUX
+#include "services.h"
+
 #define DEFAULT_QUEUE_SIZE 12
 #define DEFAULT_MIN_QUEUED_BUFS 1
 
 GST_DEBUG_CATEGORY_EXTERN (gst_debug_pvrvideosink);
 #define GST_CAT_DEFAULT gst_debug_pvrvideosink
 
+/* internal definitions */
+
 typedef struct DRI2WS_Display_TAG
 {
   unsigned int ui32RefCount;
@@ -57,6 +62,18 @@ typedef struct DRI2WS_Display_TAG
   int iDRMfd;
 } DRI2WSDisplay;
 
+#define PVR2DMEMINFO_INITIALISE(d, s) \
+{ \
+  (d)->hPrivateData = (IMG_VOID *)(s); \
+  (d)->hPrivateMapData = (IMG_VOID *)(s->hKernelMemInfo); \
+  (d)->ui32DevAddr = (IMG_UINT32) (s)->sDevVAddr.uiAddr; \
+  (d)->ui32MemSize = (s)->uAllocSize; \
+  (d)->pBase = (s)->pvLinAddr;\
+  (d)->ulFlags = (s)->ui32Flags;\
+}
+
+/* end of internal definitions */
+
 static void gst_pvrvideosink_reset (GstPVRVideoSink * pvrvideosink);
 static GstFlowReturn gst_pvrvideosink_buffer_alloc (GstBaseSink * bsink,
     guint64 offset, guint size, GstCaps * caps, GstBuffer ** buf);
@@ -107,6 +124,7 @@ gst_pvrvideosink_xwindow_update_geometry (GstPVRVideoSink * pvrvideosink)
   XWindowAttributes attr;
   WSEGLError glerror;
   WSEGLDrawableParams source_params;
+  PVRSRV_CLIENT_MEM_INFO *client_mem_info;
 
   /* Update the window geometry */
   g_mutex_lock (pvrvideosink->x_lock);
@@ -155,8 +173,10 @@ gst_pvrvideosink_xwindow_update_geometry (GstPVRVideoSink * pvrvideosink)
       GST_ERROR_OBJECT (pvrvideosink, "Error getting Drawable params");
       return;
     }
-    pvrvideosink->dcontext->dst_mem =
-        (PVR2DMEMINFO *) pvrvideosink->render_params.hPrivateData;
+
+    client_mem_info =
+        (PVRSRV_CLIENT_MEM_INFO *) pvrvideosink->render_params.hPrivateData;
+    PVR2DMEMINFO_INITIALISE (&pvrvideosink->dcontext->dst_mem, client_mem_info);
   }
 
   g_mutex_unlock (pvrvideosink->x_lock);
@@ -391,6 +411,7 @@ gst_pvrvideosink_create_window (GstPVRVideoSink * pvrvideosink, gint width,
   GstDrawContext *dcontext;
   XGCValues values;
   Atom wm_delete;
+  PVRSRV_CLIENT_MEM_INFO *client_mem_info;
 
   GST_DEBUG_OBJECT (pvrvideosink, "begin");
 
@@ -448,7 +469,9 @@ gst_pvrvideosink_create_window (GstPVRVideoSink * pvrvideosink, gint width,
   glerror =
       dcontext->wsegl_table->pfnWSEGL_GetDrawableParameters (dcontext->
       drawable_handle, &source_params, &pvrvideosink->render_params);
-  dcontext->dst_mem = (PVR2DMEMINFO *) pvrvideosink->render_params.hPrivateData;
+  client_mem_info =
+      (PVRSRV_CLIENT_MEM_INFO *) pvrvideosink->render_params.hPrivateData;
+  PVR2DMEMINFO_INITIALISE (&dcontext->dst_mem, client_mem_info);
 
   GST_DEBUG_OBJECT (pvrvideosink, "end");
   return xwindow;
@@ -536,7 +559,7 @@ gst_pvrvideosink_blit (GstPVRVideoSink * pvrvideosink, GstBuffer * buffer)
     memcpy (&result, &pvrvideosink->render_rect, sizeof (GstVideoRectangle));
   }
 
-  p_blt_3d->sDst.pSurfMemInfo = dcontext->dst_mem;
+  p_blt_3d->sDst.pSurfMemInfo = &dcontext->dst_mem;
   p_blt_3d->sDst.SurfOffset = 0;
   p_blt_3d->sDst.Stride =
       gst_video_format_get_row_stride (GST_VIDEO_FORMAT_BGRx, 0,
@@ -655,7 +678,7 @@ gst_pvrvideosink_pvrfill_rectangle (GstPVRVideoSink * pvrvideosink,
 
   p_blt2d_info = dcontext->p_blt2d_info;
 
-  p_blt2d_info->pDstMemInfo = dcontext->dst_mem;
+  p_blt2d_info->pDstMemInfo = &dcontext->dst_mem;
   p_blt2d_info->BlitFlags = PVR2D_BLIT_DISABLE_ALL;
   p_blt2d_info->DstOffset = 0;
   p_blt2d_info->CopyCode = PVR2DROPclear;
@@ -1235,6 +1258,7 @@ gst_pvrvideosink_set_window_handle (GstXOverlay * overlay, guintptr id)
     XWindowAttributes attr;
     WSEGLError glerror;
     WSEGLDrawableParams source_params;
+    PVRSRV_CLIENT_MEM_INFO *client_mem_info;
 
     xwindow = g_new0 (GstXWindow, 1);
     xwindow->window = xwindow_id;
@@ -1280,8 +1304,10 @@ gst_pvrvideosink_set_window_handle (GstXOverlay * overlay, guintptr id)
         pvrvideosink->dcontext->
         wsegl_table->pfnWSEGL_GetDrawableParameters (pvrvideosink->dcontext->
         drawable_handle, &source_params, &pvrvideosink->render_params);
-    pvrvideosink->dcontext->dst_mem =
-        (PVR2DMEMINFO *) pvrvideosink->render_params.hPrivateData;
+
+    client_mem_info =
+        (PVRSRV_CLIENT_MEM_INFO *) pvrvideosink->render_params.hPrivateData;
+    PVR2DMEMINFO_INITIALISE (&pvrvideosink->dcontext->dst_mem, client_mem_info);
   }
 
   if (xwindow)
diff --git a/sys/pvr2d/gstpvrvideosink.h b/sys/pvr2d/gstpvrvideosink.h
index 0100b84..658228a 100644
--- a/sys/pvr2d/gstpvrvideosink.h
+++ b/sys/pvr2d/gstpvrvideosink.h
@@ -58,7 +58,7 @@ struct _GstDrawContext
 {
   /* PVR2D */
   PVR2DCONTEXTHANDLE pvr_context;
-  PVR2DMEMINFO *dst_mem;
+  PVR2DMEMINFO dst_mem;
   PVR2DMEMINFO *src_mem;
   PPVR2D_3DBLT_EXT p_blt_info;
   PPVR2DBLTINFO p_blt2d_info;
-- 
1.7.5.4

