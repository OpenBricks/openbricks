From bdb9e17a276684dc4f0ce909df9b640995686f24 Mon Sep 17 00:00:00 2001
From: Alessandro Decina <alessandro.decina@collabora.co.uk>
Date: Sun, 18 Sep 2011 22:32:21 +0200
Subject: [PATCH 077/154] pvrvideosink: use PVR2DBlt3DExt to blit.

PVR2DBlt3DExt is needed to blit NV12.
---
 sys/pvr2d/gstpvrvideosink.c |   31 ++++++++++++++++++++-----------
 sys/pvr2d/gstpvrvideosink.h |    5 ++++-
 2 files changed, 24 insertions(+), 12 deletions(-)

diff --git a/sys/pvr2d/gstpvrvideosink.c b/sys/pvr2d/gstpvrvideosink.c
index eeceaa0..1bf31b8 100644
--- a/sys/pvr2d/gstpvrvideosink.c
+++ b/sys/pvr2d/gstpvrvideosink.c
@@ -30,8 +30,6 @@
 /* Debugging category */
 #include <gst/gstinfo.h>
 
-#include <gst/video/video.h>
-
 #define DEFAULT_QUEUE_SIZE 12
 #define DEFAULT_MIN_QUEUED_BUFS 1
 
@@ -69,8 +67,11 @@ static GstStaticPadTemplate gst_pvrvideosink_sink_template_factory =
 GST_STATIC_PAD_TEMPLATE ("sink",
     GST_PAD_SINK,
     GST_PAD_ALWAYS,
-    GST_STATIC_CAPS (GST_VIDEO_CAPS_BGRx)
-    );
+    GST_STATIC_CAPS (
+        GST_VIDEO_CAPS_YUV("NV12") ";"
+        GST_VIDEO_CAPS_BGRx
+    )
+);
 
 enum
 {
@@ -109,7 +110,7 @@ gst_pvrvideosink_get_dcontext (GstPVRVideoSink * pvrvideosink)
   dcontext = g_new0 (GstDrawContext, 1);
   dcontext->p_blt_info = 0;
 
-  dcontext->p_blt_info = g_new0 (PVR2D_3DBLT, 1);
+  dcontext->p_blt_info = g_new0 (PVR2D_3DBLT_EXT, 1);
   if (!dcontext->p_blt_info) {
     GST_ERROR_OBJECT (pvrvideosink, "Alloc of bltinfo failed");
     return NULL;
@@ -278,7 +279,9 @@ gst_pvrvideosink_blit (GstPVRVideoSink * pvrvideosink, GstBuffer * buffer)
   gint video_height;
   gboolean ret;
   gboolean draw_border = FALSE;
-  PPVR2D_3DBLT p_blt_3d;
+  PPVR2D_3DBLT_EXT p_blt_3d;
+  PVR2DFORMAT pvr_format = pvrvideosink->format == GST_VIDEO_FORMAT_NV12 ?
+      PVR2D_YUV420_2PLANE : PVR2D_ARGB8888;
 
   GST_DEBUG_OBJECT (pvrvideosink, "begin");
 
@@ -339,8 +342,8 @@ gst_pvrvideosink_blit (GstPVRVideoSink * pvrvideosink, GstBuffer * buffer)
   p_blt_3d->sSrc.pSurfMemInfo = dcontext->src_mem;
   p_blt_3d->sSrc.SurfOffset = 0;
   p_blt_3d->sSrc.Stride =
-      gst_video_format_get_row_stride (GST_VIDEO_FORMAT_BGRx, 0, video_width);
-  p_blt_3d->sSrc.Format = PVR2D_ARGB8888;
+      gst_video_format_get_row_stride (pvrvideosink->format, 0, video_width);
+  p_blt_3d->sSrc.Format = pvr_format;
   p_blt_3d->sSrc.SurfWidth = video_width;
   p_blt_3d->sSrc.SurfHeight = video_height;
 
@@ -351,7 +354,13 @@ gst_pvrvideosink_blit (GstPVRVideoSink * pvrvideosink, GstBuffer * buffer)
 
   p_blt_3d->hUseCode = NULL;
 
-  pvr_error = PVR2DBlt3D (pvrvideosink->dcontext->pvr_context,
+  if (pvrvideosink->format == GST_VIDEO_FORMAT_NV12)
+    p_blt_3d->bDisableDestInput = TRUE;
+  else
+    /* blit fails for RGB without this... not sure why yet... */
+    p_blt_3d->bDisableDestInput = FALSE;
+
+  pvr_error = PVR2DBlt3DExt (pvrvideosink->dcontext->pvr_context,
       dcontext->p_blt_info);
 
   switch (pvr_error) {
@@ -480,8 +489,8 @@ gst_pvrvideosink_setcaps (GstBaseSink * bsink, GstCaps * caps)
 
   structure = gst_caps_get_structure (caps, 0);
 
-  ret &= gst_structure_get_int (structure, "width", &new_width);
-  ret &= gst_structure_get_int (structure, "height", &new_height);
+  ret = gst_video_format_parse_caps (caps, &pvrvideosink->format,
+      &new_width, &new_height);
   fps = gst_structure_get_value (structure, "framerate");
   ret &= (fps != NULL);
   if (!ret) {
diff --git a/sys/pvr2d/gstpvrvideosink.h b/sys/pvr2d/gstpvrvideosink.h
index a9da1a6..e5ac7fa 100644
--- a/sys/pvr2d/gstpvrvideosink.h
+++ b/sys/pvr2d/gstpvrvideosink.h
@@ -24,6 +24,7 @@
 #define __GST_PVRVIDEOSINK_H__
 
 #include <gst/video/gstvideosink.h>
+#include <gst/video/video.h>
 #include "gstpvrbufferpool.h"
 
 #include <string.h>
@@ -59,7 +60,7 @@ struct _GstDrawContext
   PVR2DCONTEXTHANDLE pvr_context;
   PVR2DMEMINFO *dst_mem;
   PVR2DMEMINFO *src_mem;
-  PPVR2D_3DBLT p_blt_info;
+  PPVR2D_3DBLT_EXT p_blt_info;
 
   long stride;
   PVR2DFORMAT display_format;
@@ -114,6 +115,7 @@ struct _GstPVRVideoSink
   gboolean running;
 
   /* Framerate numerator and denominator */
+  GstVideoFormat format;
   gint fps_n;
   gint fps_d;
 
@@ -138,6 +140,7 @@ struct _GstPVRVideoSink
   gchar *media_title;
   gboolean redraw_borders;
   GstBuffer *current_buffer;
+
 };
 
 struct _GstPVRVideoSinkClass
-- 
1.7.5.4

