From d71a4dfce77cdd4c5c035ce11cd76abc1823b250 Mon Sep 17 00:00:00 2001
From: Alessandro Decina <alessandro.decina@collabora.co.uk>
Date: Thu, 22 Sep 2011 18:54:20 +0200
Subject: [PATCH 089/154] pvrvideosink: use the correct drawable stride

Use the correct drawable stride, as returned by WSEGL_GetDrawableParameters.
Fixes a few issues including scaling.
---
 sys/pvr2d/gstpvrvideosink.c |   61 +++++++++++++++++++++----------------------
 sys/pvr2d/gstpvrvideosink.h |    1 +
 2 files changed, 31 insertions(+), 31 deletions(-)

diff --git a/sys/pvr2d/gstpvrvideosink.c b/sys/pvr2d/gstpvrvideosink.c
index 23eb4cf..54e795b 100644
--- a/sys/pvr2d/gstpvrvideosink.c
+++ b/sys/pvr2d/gstpvrvideosink.c
@@ -107,7 +107,6 @@ gst_pvrvideosink_xwindow_update_geometry (GstPVRVideoSink * pvrvideosink)
   XWindowAttributes attr;
   WSEGLError glerror;
   WSEGLDrawableParams source_params;
-  WSEGLDrawableParams render_params;
 
   /* Update the window geometry */
   g_mutex_lock (pvrvideosink->x_lock);
@@ -129,16 +128,17 @@ gst_pvrvideosink_xwindow_update_geometry (GstPVRVideoSink * pvrvideosink)
   }
   if (pvrvideosink->dcontext != NULL) {
     glerror =
-        pvrvideosink->dcontext->wsegl_table->
-        pfnWSEGL_DeleteDrawable (pvrvideosink->dcontext->drawable_handle);
+        pvrvideosink->dcontext->
+        wsegl_table->pfnWSEGL_DeleteDrawable (pvrvideosink->dcontext->
+        drawable_handle);
     if (glerror != WSEGL_SUCCESS) {
       GST_ERROR_OBJECT (pvrvideosink, "Error destroying drawable");
       return;
     }
     glerror =
-        pvrvideosink->dcontext->wsegl_table->
-        pfnWSEGL_CreateWindowDrawable (pvrvideosink->dcontext->display_handle,
-        pvrvideosink->dcontext->glconfig,
+        pvrvideosink->dcontext->
+        wsegl_table->pfnWSEGL_CreateWindowDrawable (pvrvideosink->dcontext->
+        display_handle, pvrvideosink->dcontext->glconfig,
         &pvrvideosink->dcontext->drawable_handle,
         (NativeWindowType) pvrvideosink->xwindow->window,
         &pvrvideosink->dcontext->rotation);
@@ -147,15 +147,15 @@ gst_pvrvideosink_xwindow_update_geometry (GstPVRVideoSink * pvrvideosink)
       return;
     }
     glerror =
-        pvrvideosink->dcontext->wsegl_table->
-        pfnWSEGL_GetDrawableParameters (pvrvideosink->dcontext->drawable_handle,
-        &source_params, &render_params);
+        pvrvideosink->dcontext->
+        wsegl_table->pfnWSEGL_GetDrawableParameters (pvrvideosink->dcontext->
+        drawable_handle, &source_params, &pvrvideosink->render_params);
     if (glerror != WSEGL_SUCCESS) {
       GST_ERROR_OBJECT (pvrvideosink, "Error getting Drawable params");
       return;
     }
     pvrvideosink->dcontext->dst_mem =
-        (PVR2DMEMINFO *) render_params.hPrivateData;
+        (PVR2DMEMINFO *) pvrvideosink->render_params.hPrivateData;
   }
 
   g_mutex_unlock (pvrvideosink->x_lock);
@@ -384,7 +384,6 @@ gst_pvrvideosink_create_window (GstPVRVideoSink * pvrvideosink, gint width,
 {
   WSEGLError glerror;
   WSEGLDrawableParams source_params;
-  WSEGLDrawableParams render_params;
   Window root;
   GstXWindow *xwindow;
   GstDrawContext *dcontext;
@@ -431,9 +430,8 @@ gst_pvrvideosink_create_window (GstPVRVideoSink * pvrvideosink, gint width,
   g_mutex_unlock (pvrvideosink->x_lock);
 
   glerror =
-      dcontext->wsegl_table->
-      pfnWSEGL_CreateWindowDrawable (dcontext->display_handle,
-      dcontext->glconfig, &(dcontext->drawable_handle),
+      dcontext->wsegl_table->pfnWSEGL_CreateWindowDrawable (dcontext->
+      display_handle, dcontext->glconfig, &(dcontext->drawable_handle),
       (NativeWindowType) xwindow->window, &(dcontext->rotation));
 
   if (glerror != WSEGL_SUCCESS) {
@@ -441,10 +439,9 @@ gst_pvrvideosink_create_window (GstPVRVideoSink * pvrvideosink, gint width,
     return NULL;
   }
   glerror =
-      dcontext->wsegl_table->
-      pfnWSEGL_GetDrawableParameters (dcontext->drawable_handle, &source_params,
-      &render_params);
-  dcontext->dst_mem = (PVR2DMEMINFO *) render_params.hPrivateData;
+      dcontext->wsegl_table->pfnWSEGL_GetDrawableParameters (dcontext->
+      drawable_handle, &source_params, &pvrvideosink->render_params);
+  dcontext->dst_mem = (PVR2DMEMINFO *) pvrvideosink->render_params.hPrivateData;
 
   GST_DEBUG_OBJECT (pvrvideosink, "end");
   return xwindow;
@@ -517,7 +514,7 @@ gst_pvrvideosink_blit (GstPVRVideoSink * pvrvideosink, GstBuffer * buffer)
   p_blt_3d->sDst.SurfOffset = 0;
   p_blt_3d->sDst.Stride =
       gst_video_format_get_row_stride (GST_VIDEO_FORMAT_BGRx, 0,
-      pvrvideosink->xwindow->width);
+      pvrvideosink->render_params.ui32Stride);
   p_blt_3d->sDst.Format = PVR2D_ARGB8888;
   p_blt_3d->sDst.SurfWidth = pvrvideosink->xwindow->width;
   p_blt_3d->sDst.SurfHeight = pvrvideosink->xwindow->height;
@@ -611,11 +608,12 @@ gst_pvrvideosink_destroy_drawable (GstPVRVideoSink * pvrvideosink)
 {
   if (pvrvideosink->dcontext != NULL) {
     if (pvrvideosink->dcontext->drawable_handle)
-      pvrvideosink->dcontext->wsegl_table->
-          pfnWSEGL_DeleteDrawable (pvrvideosink->dcontext->drawable_handle);
+      pvrvideosink->dcontext->
+          wsegl_table->pfnWSEGL_DeleteDrawable (pvrvideosink->dcontext->
+          drawable_handle);
 
-    pvrvideosink->dcontext->wsegl_table->
-        pfnWSEGL_CloseDisplay (pvrvideosink->dcontext->display_handle);
+    pvrvideosink->dcontext->wsegl_table->pfnWSEGL_CloseDisplay (pvrvideosink->
+        dcontext->display_handle);
   }
 }
 
@@ -1152,7 +1150,6 @@ gst_pvrvideosink_set_window_handle (GstXOverlay * overlay, guintptr id)
     XWindowAttributes attr;
     WSEGLError glerror;
     WSEGLDrawableParams source_params;
-    WSEGLDrawableParams render_params;
 
     xwindow = g_new0 (GstXWindow, 1);
     xwindow->window = xwindow_id;
@@ -1183,9 +1180,9 @@ gst_pvrvideosink_set_window_handle (GstXOverlay * overlay, guintptr id)
     g_mutex_unlock (pvrvideosink->x_lock);
 
     glerror =
-        pvrvideosink->dcontext->wsegl_table->
-        pfnWSEGL_CreateWindowDrawable (pvrvideosink->dcontext->display_handle,
-        pvrvideosink->dcontext->glconfig,
+        pvrvideosink->dcontext->
+        wsegl_table->pfnWSEGL_CreateWindowDrawable (pvrvideosink->dcontext->
+        display_handle, pvrvideosink->dcontext->glconfig,
         &(pvrvideosink->dcontext->drawable_handle),
         (NativeWindowType) xwindow->window,
         &(pvrvideosink->dcontext->rotation));
@@ -1195,11 +1192,11 @@ gst_pvrvideosink_set_window_handle (GstXOverlay * overlay, guintptr id)
       return;
     }
     glerror =
-        pvrvideosink->dcontext->wsegl_table->
-        pfnWSEGL_GetDrawableParameters (pvrvideosink->dcontext->drawable_handle,
-        &source_params, &render_params);
+        pvrvideosink->dcontext->
+        wsegl_table->pfnWSEGL_GetDrawableParameters (pvrvideosink->dcontext->
+        drawable_handle, &source_params, &pvrvideosink->render_params);
     pvrvideosink->dcontext->dst_mem =
-        (PVR2DMEMINFO *) render_params.hPrivateData;
+        (PVR2DMEMINFO *) pvrvideosink->render_params.hPrivateData;
   }
 
   if (xwindow)
@@ -1340,6 +1337,7 @@ gst_pvrvideosink_reset (GstPVRVideoSink * pvrvideosink)
     pvrvideosink->buffer_pool = NULL;
   }
   memset (&pvrvideosink->crop, 0, sizeof (PVR2DRECT));
+  memset (&pvrvideosink->render_params, 0, sizeof (WSEGLDrawableParams));
 
   pvrvideosink->render_rect.x = pvrvideosink->render_rect.y = 0;
   pvrvideosink->render_rect.w = pvrvideosink->render_rect.h = 0;
@@ -1405,6 +1403,7 @@ gst_pvrvideosink_init (GstPVRVideoSink * pvrvideosink)
   pvrvideosink->current_buffer = NULL;
   pvrvideosink->event_thread = NULL;
   memset (&pvrvideosink->crop, 0, sizeof (PVR2DRECT));
+  memset (&pvrvideosink->render_params, 0, sizeof (WSEGLDrawableParams));
 }
 
 static void
diff --git a/sys/pvr2d/gstpvrvideosink.h b/sys/pvr2d/gstpvrvideosink.h
index e4d74d8..9ffe2e3 100644
--- a/sys/pvr2d/gstpvrvideosink.h
+++ b/sys/pvr2d/gstpvrvideosink.h
@@ -143,6 +143,7 @@ struct _GstPVRVideoSink
   gboolean redraw_borders;
   GstBuffer *current_buffer;
   PVR2DRECT crop;
+  WSEGLDrawableParams render_params;
 };
 
 struct _GstPVRVideoSinkClass
-- 
1.7.5.4

