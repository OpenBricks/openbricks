From 2f1b3adf518f533b9656ad79642248e34dc0b2d0 Mon Sep 17 00:00:00 2001
From: Luciana Fujii Pontello <luciana.fujii@collabora.co.uk>
Date: Wed, 21 Sep 2011 17:13:23 -0300
Subject: [PATCH 086/154] pvr: Clean up nicely

Do not use DestroyDevice since we did not created it using CreateDevice.
Clean window and drawable at reset, that is called also when going to
NULL state.
---
 sys/pvr2d/gstpvrvideosink.c |   37 ++++++++++++++++++++++++++++++-------
 1 files changed, 30 insertions(+), 7 deletions(-)

diff --git a/sys/pvr2d/gstpvrvideosink.c b/sys/pvr2d/gstpvrvideosink.c
index afdb426..2c67c9c 100644
--- a/sys/pvr2d/gstpvrvideosink.c
+++ b/sys/pvr2d/gstpvrvideosink.c
@@ -1316,16 +1316,45 @@ gst_pvrvideosink_get_property (GObject * object, guint prop_id,
 static void
 gst_pvrvideosink_reset (GstPVRVideoSink * pvrvideosink)
 {
+  GThread *thread;
+
   GST_OBJECT_LOCK (pvrvideosink);
   pvrvideosink->running = FALSE;
+  thread = pvrvideosink->event_thread;
+  pvrvideosink->event_thread = NULL;
   GST_OBJECT_UNLOCK (pvrvideosink);
 
+  if (thread)
+    g_thread_join (thread);
+
+  if (pvrvideosink->current_buffer) {
+    gst_buffer_unref (pvrvideosink->current_buffer);
+    pvrvideosink->current_buffer = NULL;
+  }
+
   if (pvrvideosink->buffer_pool) {
     gst_pvr_bufferpool_destroy (pvrvideosink->buffer_pool);
     pvrvideosink->buffer_pool = NULL;
   }
   memset (&pvrvideosink->crop, 0, sizeof (PVR2DRECT));
-  pvrvideosink->event_thread = NULL;
+
+  pvrvideosink->render_rect.x = pvrvideosink->render_rect.y = 0;
+  pvrvideosink->render_rect.w = pvrvideosink->render_rect.h = 0;
+  pvrvideosink->have_render_rect = FALSE;
+
+  gst_pvrvideosink_destroy_drawable (pvrvideosink);
+
+  if (pvrvideosink->xwindow) {
+    gst_pvrvideosink_xwindow_destroy (pvrvideosink, pvrvideosink->xwindow);
+    pvrvideosink->xwindow = NULL;
+  }
+
+  if (pvrvideosink->dcontext) {
+    if (pvrvideosink->dcontext->p_blt_info)
+      g_free (pvrvideosink->dcontext->p_blt_info);
+    g_free (pvrvideosink->dcontext);
+    pvrvideosink->dcontext = NULL;
+  }
 }
 
 static void
@@ -1345,12 +1374,6 @@ gst_pvrvideosink_finalize (GObject * object)
     g_mutex_free (pvrvideosink->pool_lock);
     pvrvideosink->pool_lock = NULL;
   }
-  gst_pvrvideosink_destroy_drawable (pvrvideosink);
-  if (pvrvideosink->dcontext) {
-    if (pvrvideosink->dcontext->p_blt_info)
-      g_free (pvrvideosink->dcontext->p_blt_info);
-    g_free (pvrvideosink->dcontext);
-  }
 
   G_OBJECT_CLASS (parent_class)->finalize (object);
 }
-- 
1.7.5.4

