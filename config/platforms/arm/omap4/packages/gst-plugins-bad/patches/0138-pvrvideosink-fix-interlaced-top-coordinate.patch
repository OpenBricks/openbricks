From 50cb4682def31347a4d0c87e8ed1a9de96335513 Mon Sep 17 00:00:00 2001
From: Luciana Fujii Pontello <luciana@fujii.eti.br>
Date: Thu, 5 Jan 2012 11:21:56 -0200
Subject: [PATCH 138/154] pvrvideosink: fix interlaced top coordinate

Top coordinate is not changed the first blit.

Style fixes.
---
 sys/pvr2d/gstpvrvideosink.c |   37 +++++++++++++++++--------------------
 1 files changed, 17 insertions(+), 20 deletions(-)

diff --git a/sys/pvr2d/gstpvrvideosink.c b/sys/pvr2d/gstpvrvideosink.c
index 8c27c6c..9e7f530 100644
--- a/sys/pvr2d/gstpvrvideosink.c
+++ b/sys/pvr2d/gstpvrvideosink.c
@@ -105,23 +105,23 @@ static GstVideoSinkClass *parent_class = NULL;
 
 
 static const char *
-pvr2dstrerr(PVR2DERROR err)
+pvr2dstrerr (PVR2DERROR err)
 {
   switch (err) {
-  case PVR2D_OK:
-    return "Ok";
-  case PVR2DERROR_DEVICE_UNAVAILABLE:
-    return "Failed to blit, device unavailable";
-  case PVR2DERROR_INVALID_CONTEXT:
-    return "Failed to blit, invalid context";
-  case PVR2DERROR_INVALID_PARAMETER:
-    return "Failed to blit, invalid parameter";
-  case PVR2DERROR_HW_FEATURE_NOT_SUPPORTED:
-    return "Failed to blit, hardware feature not supported";
-  case PVR2DERROR_GENERIC_ERROR:
-    return "Failed to blit, generic error";
-  default:
-    return "Unknown error";
+    case PVR2D_OK:
+      return "Ok";
+    case PVR2DERROR_DEVICE_UNAVAILABLE:
+      return "Failed to blit, device unavailable";
+    case PVR2DERROR_INVALID_CONTEXT:
+      return "Failed to blit, invalid context";
+    case PVR2DERROR_INVALID_PARAMETER:
+      return "Failed to blit, invalid parameter";
+    case PVR2DERROR_HW_FEATURE_NOT_SUPPORTED:
+      return "Failed to blit, hardware feature not supported";
+    case PVR2DERROR_GENERIC_ERROR:
+      return "Failed to blit, generic error";
+    default:
+      return "Unknown error";
   }
 }
 
@@ -555,7 +555,6 @@ gst_pvrvideosink_blit (GstPVRVideoSink * pvrvideosink, GstBuffer * buffer)
   GstDrawContext *dcontext = pvrvideosink->dcontext;
   gint video_width;
   gint video_height;
-  gboolean ret;
   gboolean draw_border = FALSE;
   PPVR2D_3DBLT_EXT p_blt_3d;
   PVR2DMEMINFO *src_mem;
@@ -676,9 +675,7 @@ gst_pvrvideosink_blit (GstPVRVideoSink * pvrvideosink, GstBuffer * buffer)
      * stride of the destination buffer.
      */
     /* step 1: */
-    p_blt_3d->rcSource.top /= 2;
     p_blt_3d->rcSource.bottom /= 2;
-    p_blt_3d->rcDest.top /= 2;
     p_blt_3d->rcDest.bottom /= 2;
     p_blt_3d->sDst.Stride *= 2;
 
@@ -714,7 +711,7 @@ gst_pvrvideosink_blit (GstPVRVideoSink * pvrvideosink, GstBuffer * buffer)
 done:
   if (pvr_error) {
     GST_ERROR_OBJECT (pvrvideosink, "%s (%d)",
-        pvr2dstrerr(pvr_error), pvr_error);
+        pvr2dstrerr (pvr_error), pvr_error);
   }
   GST_DEBUG_OBJECT (pvrvideosink, "end");
   g_mutex_unlock (pvrvideosink->dcontext->x_lock);
@@ -772,7 +769,7 @@ gst_pvrvideosink_pvrfill_rectangle (GstPVRVideoSink * pvrvideosink,
 done:
   if (pvr_error) {
     GST_ERROR_OBJECT (pvrvideosink, "%s (%d)",
-        pvr2dstrerr(pvr_error), pvr_error);
+        pvr2dstrerr (pvr_error), pvr_error);
   }
   GST_DEBUG_OBJECT (pvrvideosink, "end");
 }
-- 
1.7.5.4

