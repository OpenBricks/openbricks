From 290bfb20d023ab3805f477c1595fdf304f34cf7d Mon Sep 17 00:00:00 2001
From: Rob Clark <rob@ti.com>
Date: Tue, 27 Dec 2011 00:16:51 -0600
Subject: [PATCH 137/154] pvrvideosink: interlaced support

---
 sys/pvr2d/gstpvrvideosink.c |   41 +++++++++++++++++++++++++++++++++++++++--
 sys/pvr2d/gstpvrvideosink.h |    1 +
 2 files changed, 40 insertions(+), 2 deletions(-)

diff --git a/sys/pvr2d/gstpvrvideosink.c b/sys/pvr2d/gstpvrvideosink.c
index 626c22a..8c27c6c 100644
--- a/sys/pvr2d/gstpvrvideosink.c
+++ b/sys/pvr2d/gstpvrvideosink.c
@@ -665,8 +665,40 @@ gst_pvrvideosink_blit (GstPVRVideoSink * pvrvideosink, GstBuffer * buffer)
     /* I'd guess because using ARGB format (ie. has alpha channel) */
     p_blt_3d->bDisableDestInput = FALSE;
 
-  pvr_error = PVR2DBlt3DExt (pvrvideosink->dcontext->pvr_context,
-      dcontext->p_blt_info);
+  if (pvrvideosink->interlaced) {
+    /* NOTE: this probably won't look so good if linear (instead
+     * of point) filtering is used.
+     */
+
+    /* for interlaced blits, we split up the image into two blits..
+     * we expect even field on top, odd field on bottom.  We blit
+     * from first top half, then bottom half, doubling up the
+     * stride of the destination buffer.
+     */
+    /* step 1: */
+    p_blt_3d->rcSource.top /= 2;
+    p_blt_3d->rcSource.bottom /= 2;
+    p_blt_3d->rcDest.top /= 2;
+    p_blt_3d->rcDest.bottom /= 2;
+    p_blt_3d->sDst.Stride *= 2;
+
+    pvr_error = PVR2DBlt3DExt (pvrvideosink->dcontext->pvr_context,
+        dcontext->p_blt_info);
+    if (pvr_error)
+      goto done;
+
+    /* step 2: */
+    p_blt_3d->rcSource.top += video_height / 2;
+    p_blt_3d->rcSource.bottom += video_height / 2;
+    p_blt_3d->sDst.SurfOffset = p_blt_3d->sDst.Stride / 2;
+
+    pvr_error = PVR2DBlt3DExt (pvrvideosink->dcontext->pvr_context,
+        dcontext->p_blt_info);
+
+  } else {
+    pvr_error = PVR2DBlt3DExt (pvrvideosink->dcontext->pvr_context,
+        dcontext->p_blt_info);
+  }
 
   if (pvr_error)
     goto done;
@@ -886,6 +918,11 @@ gst_pvrvideosink_setcaps (GstBaseSink * bsink, GstCaps * caps)
   pvrvideosink->video_width = width;
   pvrvideosink->video_height = height;
 
+  /* figure out if we are dealing w/ interlaced */
+  pvrvideosink->interlaced = FALSE;
+  gst_structure_get_boolean (structure, "interlaced",
+      &pvrvideosink->interlaced);
+
   /* get video's pixel-aspect-ratio */
   caps_par = gst_structure_get_value (structure, "pixel-aspect-ratio");
   if (caps_par) {
diff --git a/sys/pvr2d/gstpvrvideosink.h b/sys/pvr2d/gstpvrvideosink.h
index d1abdcd..1a51311 100644
--- a/sys/pvr2d/gstpvrvideosink.h
+++ b/sys/pvr2d/gstpvrvideosink.h
@@ -125,6 +125,7 @@ struct _GstPVRVideoSink
 
   GstVideoFormat format;
   gint rowstride;
+  gboolean interlaced;
 
   GThread *event_thread;
   GMutex *flow_lock;
-- 
1.7.5.4

