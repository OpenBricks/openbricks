From 3dafe559fd3f86179e971bdffb2533ce2f32df31 Mon Sep 17 00:00:00 2001
From: Luciana Fujii Pontello <luciana@fujii.eti.br>
Date: Thu, 8 Dec 2011 20:18:47 -0200
Subject: [PATCH 128/154] pvrvideosink: accept -strided video with 2d buffers

Change pvrvideosink to support -strided video using 2d buffers in the
bufferpool.
---
 sys/pvr2d/gstpvrbufferpool.c |   22 ++++++++++++++++++++--
 sys/pvr2d/gstpvrbufferpool.h |    2 ++
 sys/pvr2d/gstpvrvideosink.c  |    8 +++++++-
 3 files changed, 29 insertions(+), 3 deletions(-)

diff --git a/sys/pvr2d/gstpvrbufferpool.c b/sys/pvr2d/gstpvrbufferpool.c
index 03bcafb..c5bfc2c 100644
--- a/sys/pvr2d/gstpvrbufferpool.c
+++ b/sys/pvr2d/gstpvrbufferpool.c
@@ -53,6 +53,8 @@ static GstDucatiBuffer *
 gst_ducati_buffer_new (GstPvrBufferPool * pool)
 {
   PVR2DERROR pvr_error;
+  void *buf;
+  guint sz;
   GstDucatiBuffer *self = (GstDucatiBuffer *)
       gst_mini_object_new (GST_TYPE_DUCATIBUFFER);
 
@@ -61,7 +63,14 @@ gst_ducati_buffer_new (GstPvrBufferPool * pool)
   self->pool = (GstPvrBufferPool *)
       gst_mini_object_ref (GST_MINI_OBJECT (pool));
 
-  GST_BUFFER_DATA (self) = gst_ducati_alloc_1d (pool->size);
+  if (pool->strided) {
+    buf = gst_ducati_alloc_2d (pool->padded_width, pool->padded_height, &sz);
+  } else {
+    sz = pool->size;
+    buf = gst_ducati_alloc_1d (sz);
+  }
+
+  GST_BUFFER_DATA (self) = buf;
   GST_BUFFER_SIZE (self) = pool->size;
   GST_LOG_OBJECT (pool->element, "width=%d, height=%d and size=%d",
       pool->padded_width, pool->padded_height, pool->size);
@@ -176,11 +185,20 @@ gst_pvr_bufferpool_new (GstElement * element, GstCaps * caps, gint num_buffers,
 {
   GstPvrBufferPool *self = (GstPvrBufferPool *)
       gst_mini_object_new (GST_TYPE_PVRBUFFERPOOL);
-  GstStructure *s = gst_caps_get_structure (caps, 0);
+  GstStructure *s;
+
+  g_return_val_if_fail (caps != NULL, NULL);
+  s = gst_caps_get_structure (caps, 0);
 
   self->element = gst_object_ref (element);
   gst_structure_get_int (s, "width", &self->padded_width);
   gst_structure_get_int (s, "height", &self->padded_height);
+  if (strcmp (gst_structure_get_name (s), "video/x-raw-yuv-strided")) {
+    self->strided = FALSE;
+  } else {
+    self->strided = TRUE;
+    gst_structure_get_int (s, "rowstride", &self->rowstride);
+  }
   self->caps = gst_caps_ref (caps);
   self->size = size;
   self->pvr_context = pvr_context;
diff --git a/sys/pvr2d/gstpvrbufferpool.h b/sys/pvr2d/gstpvrbufferpool.h
index 1d90472..93bb7a3 100644
--- a/sys/pvr2d/gstpvrbufferpool.h
+++ b/sys/pvr2d/gstpvrbufferpool.h
@@ -51,6 +51,8 @@ struct _GstPvrBufferPool
   /* output (padded) size including any codec padding: */
   gint padded_width, padded_height;
   gint size;
+  gboolean strided;
+  gint rowstride;
   PVR2DCONTEXTHANDLE pvr_context;
 
   GstCaps *caps;
diff --git a/sys/pvr2d/gstpvrvideosink.c b/sys/pvr2d/gstpvrvideosink.c
index 362162f..c65af76 100644
--- a/sys/pvr2d/gstpvrvideosink.c
+++ b/sys/pvr2d/gstpvrvideosink.c
@@ -64,13 +64,19 @@ static void gst_pvrvideosink_xwindow_destroy (GstPVRVideoSink * pvrvideosink,
     GstXWindow * xwindow);
 
 static GstStaticPadTemplate gst_pvrvideosink_sink_template_factory =
-GST_STATIC_PAD_TEMPLATE ("sink",
+    GST_STATIC_PAD_TEMPLATE ("sink",
     GST_PAD_SINK,
     GST_PAD_ALWAYS,
     GST_STATIC_CAPS ("video/x-raw-yuv, "
         "format = (fourcc) NV12, "
         "width = " GST_VIDEO_SIZE_RANGE ", "
         "height = " GST_VIDEO_SIZE_RANGE ", "
+        "framerate = " GST_VIDEO_FPS_RANGE ";"
+        "video/x-raw-yuv-strided, "
+        "format = (fourcc) NV12, "
+        "rowstride = (int) 4096, "
+        "width = " GST_VIDEO_SIZE_RANGE ", "
+        "height = " GST_VIDEO_SIZE_RANGE ", "
         "framerate = " GST_VIDEO_FPS_RANGE));
 
 enum
-- 
1.7.5.4

