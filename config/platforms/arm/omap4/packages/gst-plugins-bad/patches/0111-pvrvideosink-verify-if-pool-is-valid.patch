From 7bff74a8a9da2eba03da79606d42e1c2d247e8f4 Mon Sep 17 00:00:00 2001
From: Luciana Fujii Pontello <lucianafujii@collabora.co.uk>
Date: Fri, 21 Oct 2011 00:30:41 -0400
Subject: [PATCH 111/154] pvrvideosink: verify if pool is valid

Keep control if pool is valid or not. Pool is not valid when on READY
or NULL state.
---
 sys/pvr2d/gstpvrvideosink.c |   20 ++++++++++++++++++++
 sys/pvr2d/gstpvrvideosink.h |    1 +
 2 files changed, 21 insertions(+), 0 deletions(-)

diff --git a/sys/pvr2d/gstpvrvideosink.c b/sys/pvr2d/gstpvrvideosink.c
index aeabd41..1db694f 100644
--- a/sys/pvr2d/gstpvrvideosink.c
+++ b/sys/pvr2d/gstpvrvideosink.c
@@ -921,6 +921,14 @@ gst_pvrvideosink_change_state (GstElement * element, GstStateChange transition)
       gst_pvrvideosink_manage_event_thread (pvrvideosink);
       break;
     case GST_STATE_CHANGE_READY_TO_PAUSED:
+      g_mutex_lock (pvrvideosink->pool_lock);
+      pvrvideosink->pool_invalid = FALSE;
+      g_mutex_unlock (pvrvideosink->pool_lock);
+      break;
+    case GST_STATE_CHANGE_PAUSED_TO_READY:
+      g_mutex_lock (pvrvideosink->pool_lock);
+      pvrvideosink->pool_invalid = TRUE;
+      g_mutex_unlock (pvrvideosink->pool_lock);
       break;
     case GST_STATE_CHANGE_PAUSED_TO_PLAYING:
       break;
@@ -1105,6 +1113,16 @@ gst_pvrvideosink_buffer_alloc (GstBaseSink * bsink, guint64 offset, guint size,
     goto beach;
   }
 
+  g_mutex_lock (pvrvideosink->pool_lock);
+  if (G_UNLIKELY (pvrvideosink->pool_invalid)) {
+    GST_DEBUG_OBJECT (pvrvideosink, "the pool is flushing");
+    ret = GST_FLOW_WRONG_STATE;
+    g_mutex_unlock (pvrvideosink->pool_lock);
+    goto beach;
+  } else {
+    g_mutex_unlock (pvrvideosink->pool_lock);
+  }
+
   GST_LOG_OBJECT (pvrvideosink,
       "a buffer of %d bytes was requested with caps %" GST_PTR_FORMAT
       " and offset %" G_GUINT64_FORMAT, size, caps, offset);
@@ -1457,6 +1475,7 @@ gst_pvrvideosink_reset (GstPVRVideoSink * pvrvideosink)
   }
 
   g_mutex_lock (pvrvideosink->pool_lock);
+  pvrvideosink->pool_invalid = TRUE;
   if (pvrvideosink->buffer_pool) {
     gst_pvr_bufferpool_destroy (pvrvideosink->buffer_pool);
     pvrvideosink->buffer_pool = NULL;
@@ -1516,6 +1535,7 @@ gst_pvrvideosink_init (GstPVRVideoSink * pvrvideosink)
   pvrvideosink->x_lock = g_mutex_new ();
   pvrvideosink->pool_lock = g_mutex_new ();
   pvrvideosink->buffer_pool = NULL;
+  pvrvideosink->pool_invalid = TRUE;
 
   pvrvideosink->keep_aspect = FALSE;
   pvrvideosink->current_caps = NULL;
diff --git a/sys/pvr2d/gstpvrvideosink.h b/sys/pvr2d/gstpvrvideosink.h
index 93737d3..c4bd7dc 100644
--- a/sys/pvr2d/gstpvrvideosink.h
+++ b/sys/pvr2d/gstpvrvideosink.h
@@ -125,6 +125,7 @@ struct _GstPVRVideoSink
   GMutex *pool_lock;
   GMutex *x_lock;
   GstPvrBufferPool *buffer_pool;
+  gboolean pool_invalid;
   gint num_buffers;
   gboolean num_buffers_can_change;
   gint min_queued_bufs;
-- 
1.7.5.4

