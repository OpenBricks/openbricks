From c2dc6bf22abe2d633da2d5cf816c7f43bd9f04e2 Mon Sep 17 00:00:00 2001
From: Rob Clark <rob@ti.com>
Date: Wed, 6 Oct 2010 16:04:59 +0200
Subject: [PATCH 02/26] textoverlay: fix Cb/Cr inversion for colored text overlays

In case of odd values for xpos or ypos, the division by two in CbCr
plane would result in an off-by-one error, which in the case of NV12,
NV21, or UYVY would cause inversion of blue and red colors.  (And
would be not so easily noticed for I420 as it would just cause the
chroma to be offset slightly from the luma.)

This patch also fixes a silly typo from the earlier patch which
added NV12 support that broke UYVY support.

Conflicts:

	ext/pango/gsttextoverlay.c
---
 ext/pango/gsttextoverlay.c |   23 +++++++++++++++++++----
 1 files changed, 19 insertions(+), 4 deletions(-)

diff --git a/ext/pango/gsttextoverlay.c b/ext/pango/gsttextoverlay.c
index f7d9e5c..ed840fe 100644
--- a/ext/pango/gsttextoverlay.c
+++ b/ext/pango/gsttextoverlay.c
@@ -180,8 +180,7 @@ static GstStaticPadTemplate src_template_factory =
     GST_PAD_SRC,
     GST_PAD_ALWAYS,
     GST_STATIC_CAPS (GST_VIDEO_CAPS_BGRx ";"
-        GST_VIDEO_CAPS_xRGB ";"
-        GST_VIDEO_CAPS_YUV ("{I420, UYUV, NV12}"))
+        GST_VIDEO_CAPS_xRGB ";" GST_VIDEO_CAPS_YUV ("{I420, UYVY, NV12, NV21}"))
     );
 
 static GstStaticPadTemplate video_sink_template_factory =
@@ -189,8 +188,7 @@ static GstStaticPadTemplate video_sink_template_factory =
     GST_PAD_SINK,
     GST_PAD_ALWAYS,
     GST_STATIC_CAPS (GST_VIDEO_CAPS_BGRx ";"
-        GST_VIDEO_CAPS_xRGB ";"
-        GST_VIDEO_CAPS_YUV ("{I420, UYUV, NV12}"))
+        GST_VIDEO_CAPS_xRGB ";" GST_VIDEO_CAPS_YUV ("{I420, UYVY, NV12, NV21}"))
     );
 
 static GstStaticPadTemplate text_sink_template_factory =
@@ -1383,6 +1381,12 @@ gst_text_overlay_blit_NV12 (GstTextOverlay * overlay,
   int u_offset, v_offset;
   int h, w;
 
+  /* because U/V is 2x2 subsampled, we need to round, either up or down,
+   * to a boundary of integer number of U/V pixels:
+   */
+  xpos = GST_ROUND_UP_2 (xpos);
+  ypos = GST_ROUND_UP_2 (ypos);
+
   w = overlay->width;
   h = overlay->height;
 
@@ -1407,6 +1411,12 @@ gst_text_overlay_blit_I420 (GstTextOverlay * overlay,
   int u_offset, v_offset;
   int h, w;
 
+  /* because U/V is 2x2 subsampled, we need to round, either up or down,
+   * to a boundary of integer number of U/V pixels:
+   */
+  xpos = GST_ROUND_UP_2 (xpos);
+  ypos = GST_ROUND_UP_2 (ypos);
+
   w = overlay->width;
   h = overlay->height;
 
@@ -1436,6 +1446,11 @@ gst_text_overlay_blit_UYVY (GstTextOverlay * overlay,
   int h, w;
   guchar *pimage, *dest;
 
+  /* because U/V is 2x horizontally subsampled, we need to round to a
+   * boundary of integer number of U/V pixels in x dimension:
+   */
+  xpos = GST_ROUND_UP_2 (xpos);
+
   w = overlay->image_width - 2;
   h = overlay->image_height - 2;
 
-- 
1.7.1

