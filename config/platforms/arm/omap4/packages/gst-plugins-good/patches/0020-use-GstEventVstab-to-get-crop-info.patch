From f66627a085412f7fe7c9438ab8144df3a06e469b Mon Sep 17 00:00:00 2001
From: Rob Clark <rob@ti.com>
Date: Tue, 25 May 2010 11:02:45 -0500
Subject: [PATCH 20/32] use GstEventVstab to get crop info

---
 sys/v4l2/gstv4l2sink.c |   51 ++++++++++++++++++++++++++++++++++++++++++++++-
 1 files changed, 49 insertions(+), 2 deletions(-)

diff --git a/sys/v4l2/gstv4l2sink.c b/sys/v4l2/gstv4l2sink.c
index 2c0dc01..f579224 100644
--- a/sys/v4l2/gstv4l2sink.c
+++ b/sys/v4l2/gstv4l2sink.c
@@ -186,6 +186,7 @@ static GstCaps *gst_v4l2sink_get_caps (GstBaseSink * bsink);
 static gboolean gst_v4l2sink_set_caps (GstBaseSink * bsink, GstCaps * caps);
 static GstFlowReturn gst_v4l2sink_buffer_alloc (GstBaseSink * bsink,
     guint64 offset, guint size, GstCaps * caps, GstBuffer ** buf);
+static gboolean gst_v4l2sink_event (GstBaseSink * bsink, GstEvent * event);
 static GstFlowReturn gst_v4l2sink_show_frame (GstBaseSink * bsink,
     GstBuffer * buf);
 
@@ -278,6 +279,7 @@ gst_v4l2sink_class_init (GstV4l2SinkClass * klass)
   basesink_class->get_caps = GST_DEBUG_FUNCPTR (gst_v4l2sink_get_caps);
   basesink_class->set_caps = GST_DEBUG_FUNCPTR (gst_v4l2sink_set_caps);
   basesink_class->buffer_alloc = GST_DEBUG_FUNCPTR (gst_v4l2sink_buffer_alloc);
+  basesink_class->event = GST_DEBUG_FUNCPTR (gst_v4l2sink_event);
   basesink_class->render = GST_DEBUG_FUNCPTR (gst_v4l2sink_show_frame);
 }
 
@@ -738,15 +740,25 @@ gst_v4l2sink_set_caps (GstBaseSink * bsink, GstCaps * caps)
 
     gst_query_parse_buffers_dimensions (query, &min_width, &min_height);
     if (min_width > w) {
+      v4l2sink->crop.width = w;
+      v4l2sink->crop_fields_set |= RECT_WIDTH_SET;
       w = min_width;
     }
     if (min_height > h) {
+      v4l2sink->crop.height = h;
+      v4l2sink->crop_fields_set |= RECT_HEIGHT_SET;
       h = min_height;
     }
+
+    /* clear top/left crop values.. otherwise by default display will try
+     * to center, rather than scale, the image if it is too big to fit on
+     * display
+     */
+    v4l2sink->crop.top = v4l2sink->crop.left = 0;
+    v4l2sink->crop_fields_set |= RECT_TOP_SET | RECT_LEFT_SET;
   }
   gst_query_unref (query);
 
-
   if (!gst_v4l2_object_set_format (v4l2sink->v4l2object, format->pixelformat, w,
           h)) {
     /* error already posted */
@@ -754,7 +766,13 @@ gst_v4l2sink_set_caps (GstBaseSink * bsink, GstCaps * caps)
     return FALSE;
   }
 
-  v4l2sink->current_caps = gst_caps_ref (caps);
+  /* this needs to go after gst_v4l2_object_set_format() to ensure driver
+   * has proper width/height (so we don't confuse it's error checking by
+   * setting a crop larger than the picture size)
+   */
+  gst_v4l2sink_sync_crop_fields (v4l2sink);
+
+  v4l2sink->current_caps = caps;
 
   return TRUE;
 }
@@ -860,6 +878,35 @@ gst_v4l2sink_buffer_alloc (GstBaseSink * bsink, guint64 offset, guint size,
   }
 }
 
+/* called to handle events */
+static gboolean
+gst_v4l2sink_event (GstBaseSink * bsink, GstEvent * event)
+{
+  GstV4l2Sink *v4l2sink = GST_V4L2SINK (bsink);
+  GstEventType type = GST_EVENT_TYPE (event);
+
+  GST_DEBUG_OBJECT (v4l2sink, "event %" GST_PTR_FORMAT, event);
+
+  switch (type) {
+    case GST_EVENT_VSTAB:{
+      gint top, left;
+      gst_event_parse_vstab (event, &top, &left);
+      v4l2sink->crop.top = top;
+      v4l2sink->crop.left = left;
+      v4l2sink->crop_fields_set |= RECT_TOP_SET | RECT_LEFT_SET;
+      gst_v4l2sink_sync_crop_fields (v4l2sink);
+      return TRUE;
+    }
+    default:{
+      if (GST_BASE_SINK_CLASS (parent_class)->event) {
+        return GST_BASE_SINK_CLASS (parent_class)->event (bsink, event);
+      } else {
+        return TRUE;
+      }
+    }
+  }
+}
+
 /* called after A/V sync to render frame */
 static GstFlowReturn
 gst_v4l2sink_show_frame (GstBaseSink * bsink, GstBuffer * buf)
-- 
1.7.1

