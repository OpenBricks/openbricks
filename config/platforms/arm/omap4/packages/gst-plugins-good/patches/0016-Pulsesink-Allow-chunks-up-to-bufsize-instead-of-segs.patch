From 44ac0c9bbaa758356195f6e62ae09a82f0071b82 Mon Sep 17 00:00:00 2001
From: David Henningsson <david.henningsson@canonical.com>
Date: Mon, 31 Jan 2011 05:58:36 +0100
Subject: [PATCH 16/19] Pulsesink: Allow chunks up to bufsize instead of segsize

By allowing larger chunks to be sent, PulseAudio will have a
lower CPU usage. This is especially important on low-end machines,
where PulseAudio can crash if packets are coming in at a higher
rate than PulseAudio can process them.

Signed-off-by: David Henningsson <david.henningsson@canonical.com>
---
 ext/pulse/pulsesink.c |   16 ++++++++--------
 1 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/ext/pulse/pulsesink.c b/ext/pulse/pulsesink.c
index e4fe6e3..884d1af 100644
--- a/ext/pulse/pulsesink.c
+++ b/ext/pulse/pulsesink.c
@@ -1343,11 +1343,11 @@ gst_pulseringbuffer_commit (GstRingBuffer * buf, guint64 * sample,
 
     towrite = out_samples * bps;
 
-    /* Only ever write segsize bytes at once. This will
-     * also limit the PA shm buffer to segsize
+    /* Only ever write bufsize bytes at once. This will
+     * also limit the PA shm buffer to bufsize
      */
-    if (towrite > buf->spec.segsize)
-      towrite = buf->spec.segsize;
+    if (towrite > bufsize)
+      towrite = bufsize;
 
     if ((pbuf->m_writable < towrite) || (offset != pbuf->m_lastoffset)) {
       /* if no room left or discontinuity in offset,
@@ -1396,9 +1396,9 @@ gst_pulseringbuffer_commit (GstRingBuffer * buf, guint64 * sample,
       }
 
       /* make sure we only buffer up latency-time samples */
-      if (pbuf->m_writable > buf->spec.segsize) {
+      if (pbuf->m_writable > bufsize) {
         /* limit buffering to latency-time value */
-        pbuf->m_writable = buf->spec.segsize;
+        pbuf->m_writable = bufsize;
 
         GST_LOG_OBJECT (psink, "Limiting buffering to %" G_GSIZE_FORMAT,
             pbuf->m_writable);
@@ -1417,9 +1417,9 @@ gst_pulseringbuffer_commit (GstRingBuffer * buf, guint64 * sample,
           pbuf->m_writable);
 
       /* Just to make sure that we didn't get more than requested */
-      if (pbuf->m_writable > buf->spec.segsize) {
+      if (pbuf->m_writable > bufsize) {
         /* limit buffering to latency-time value */
-        pbuf->m_writable = buf->spec.segsize;
+        pbuf->m_writable = bufsize;
       }
     }
 
-- 
1.7.1

