diff -Naur linux-ubuntu-omap4-2.6.38-1208.11.orig//drivers/input/touchscreen/usbtouchscreen.c linux-ubuntu-omap4-2.6.38-1208.11/drivers/input/touchscreen/usbtouchscreen.c
--- linux-ubuntu-omap4-2.6.38-1208.11.orig//drivers/input/touchscreen/usbtouchscreen.c	2011-10-15 18:31:48.630881466 +0200
+++ linux-ubuntu-omap4-2.6.38-1208.11/drivers/input/touchscreen/usbtouchscreen.c	2011-10-15 18:49:39.444191340 +0200
@@ -291,14 +291,24 @@
 #define EGALAX_PKT_TYPE_REPT		0x80
 #define EGALAX_PKT_TYPE_DIAG		0x0A
 
+#define EGALAX_TS_MIN_X                 0
+#define EGALAX_TS_MAX_X                 1280
+#define EGALAX_TS_MIN_Y                 0
+#define EGALAX_TS_MAX_Y                 720
+
+#define EGALAX_TS_PHYS_MIN_X            128
+#define EGALAX_TS_PHYS_MAX_X            3986
+#define EGALAX_TS_PHYS_MIN_Y            167
+#define EGALAX_TS_PHYS_MAX_Y            3902
+
 static int egalax_read_data(struct usbtouch_usb *dev, unsigned char *pkt)
 {
-	if ((pkt[0] & EGALAX_PKT_TYPE_MASK) != EGALAX_PKT_TYPE_REPT)
+	if ((pkt[0] & EGALAX_PKT_TYPE_MASK) != 2)
 		return 0;
 
-	dev->x = ((pkt[3] & 0x0F) << 7) | (pkt[4] & 0x7F);
-	dev->y = ((pkt[1] & 0x0F) << 7) | (pkt[2] & 0x7F);
-	dev->touch = pkt[0] & 0x01;
+	dev->x = (pkt[5] << 8) | pkt[4];
+	dev->y = (pkt[3] << 8) | pkt[2];
+	dev->touch = pkt[1] & 0x01;
 
 	return 1;
 }
@@ -306,17 +316,43 @@
 static int egalax_get_pkt_len(unsigned char *buf, int len)
 {
 	switch (buf[0] & EGALAX_PKT_TYPE_MASK) {
-	case EGALAX_PKT_TYPE_REPT:
-		return 5;
+	case 2:
+		return 6;
+	default:
+		printk(KERN_WARNING "%s: unknown packet type 0x%x\n",
+		       __func__, buf[0]);
+       }
+
+	return 0;
+}
 
-	case EGALAX_PKT_TYPE_DIAG:
-		if (len < 2)
-			return -1;
+static void egalax_process_pkt(struct usbtouch_usb *usbtouch,
+                                 unsigned char *pkt, int len)
+{
+	struct usbtouch_device_info *type = usbtouch->type;
+	int x, y;
 
-		return buf[1] + 2;
-	}
+	if (!type->read_data(usbtouch, pkt))
+			return;
 
-	return 0;
+	x = (usbtouch->x - EGALAX_TS_PHYS_MIN_X) * EGALAX_TS_MAX_X
+		/ (EGALAX_TS_PHYS_MAX_X - EGALAX_TS_PHYS_MIN_X);
+	if (x < EGALAX_TS_MIN_X) x = EGALAX_TS_MIN_X;
+	if (x > EGALAX_TS_MAX_X) x = EGALAX_TS_MAX_X;
+
+	y = (usbtouch->y - EGALAX_TS_PHYS_MIN_Y) * EGALAX_TS_MAX_Y
+		/ (EGALAX_TS_PHYS_MAX_Y - EGALAX_TS_PHYS_MIN_Y);
+	y = EGALAX_TS_MAX_Y - y;
+	if (y < EGALAX_TS_MIN_Y) y = EGALAX_TS_MIN_Y;
+	if (y > EGALAX_TS_MAX_Y) y = EGALAX_TS_MAX_Y;
+
+	input_report_key(usbtouch->input, BTN_TOUCH, usbtouch->touch);
+
+        input_report_abs(usbtouch->input, ABS_X, x);
+        input_report_abs(usbtouch->input, ABS_Y, y);
+	if (type->max_press)
+		input_report_abs(usbtouch->input, ABS_PRESSURE, usbtouch->press);
+	input_sync(usbtouch->input);
 }
 #endif
 
@@ -960,7 +996,7 @@
 		.min_yc		= 0x0,
 		.max_yc		= 0x07ff,
 		.rept_size	= 16,
-		.process_pkt	= usbtouch_process_multi,
+		.process_pkt	= egalax_process_pkt,
 		.get_pkt_len	= egalax_get_pkt_len,
 		.read_data	= egalax_read_data,
 	},
