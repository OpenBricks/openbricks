From 57a5e256cca14fdf8f4dabd839bf21762cff2eaa Mon Sep 17 00:00:00 2001
From: warped-rudi <r.ihle@s-t.de>
Date: Wed, 9 Nov 2016 09:27:39 +0100
Subject: [PATCH] MXC-CEC: Change return codes and add poll support for write
 function

---
 drivers/mxc/hdmi-cec/mxc_hdmi-cec.c | 31 ++++++++++++++++++-------------
 1 file changed, 18 insertions(+), 13 deletions(-)

diff --git a/drivers/mxc/hdmi-cec/mxc_hdmi-cec.c b/drivers/mxc/hdmi-cec/mxc_hdmi-cec.c
index 8777320..8134cc8 100644
--- a/drivers/mxc/hdmi-cec/mxc_hdmi-cec.c
+++ b/drivers/mxc/hdmi-cec/mxc_hdmi-cec.c
@@ -328,6 +328,7 @@ static int hdmi_cec_open(struct inode *inode, struct file *file)
 	}
 	hdmi_cec_data.open_count = 1;
 	file->private_data = (void *)(&hdmi_cec_data);
+	hdmi_cec_data.tx_answer = CEC_TX_AVAIL;
 	hdmi_cec_data.logical_address = 15;
 	hdmi_cec_data.is_started = false;
 	mutex_unlock(&hdmi_cec_data.lock);
@@ -393,7 +394,9 @@ static ssize_t hdmi_cec_write(struct file *file, const char __user *buf,
 	if (!hdmi_cec_data.is_started)
 		ret = -EACCES;
 	else if (hdmi_cec_data.tx_answer != CEC_TX_AVAIL)
-		ret = -EBUSY;
+		ret = -EAGAIN;
+	else if (hdmi_cec_data.link_status != 1)
+		ret = -EAGAIN;
 	else if (count > MAX_MESSAGE_LEN)
 		ret = -EINVAL;
 	else if (copy_from_user(msg, buf, count))
@@ -420,18 +423,15 @@ static ssize_t hdmi_cec_write(struct file *file, const char __user *buf,
 	ret = wait_event_interruptible_timeout(
 		tx_queue, hdmi_cec_data.tx_answer != CEC_TX_INPROGRESS, HZ);
 
-	if (ret < 0) {
+	if (ret < 0)
 		ret = -ERESTARTSYS;
-		goto tx_out;
-	}
-
-	if (hdmi_cec_data.tx_answer & HDMI_IH_CEC_STAT0_DONE)
-		/* msg correctly sent */
-		ret = msg_len;
+	else if (hdmi_cec_data.tx_answer & HDMI_IH_CEC_STAT0_DONE)
+		ret = msg_len;	/* msg sent, ACK received */
+	else if (hdmi_cec_data.tx_answer & HDMI_IH_CEC_STAT0_NACK)
+		ret = -EIO;	/* msg sent, NACK received */
 	else
-		ret = -EIO;
+		ret = -EPIPE;	/* other error */
 
-tx_out:
 	hdmi_cec_data.tx_answer = CEC_TX_AVAIL;
 	return ret;
 }
@@ -575,6 +575,7 @@ static int hdmi_cec_release(struct inode *inode, struct file *file)
 		hdmi_cec_data.open_count = 0;
 		hdmi_cec_data.is_started = false;
 		hdmi_cec_data.logical_address = 15;
+		hdmi_cec_data.tx_answer = CEC_TX_AVAIL;
 
 		free_events();
 	}
@@ -590,13 +591,17 @@ static unsigned int hdmi_cec_poll(struct file *file, poll_table *wait)
 	pr_debug("function : %s\n", __func__);
 
 	poll_wait(file, &rx_queue, wait);
+	poll_wait(file, &tx_queue, wait);
+
+	if (hdmi_cec_data.link_status == 1 &&
+	    hdmi_cec_data.tx_answer == CEC_TX_AVAIL)
+		mask |= POLLOUT | POLLWRNORM;
 
-	/* Always writable */
-	mask =  (POLLOUT | POLLWRNORM);
 	mutex_lock(&hdmi_cec_data.lock);
 	if (!list_empty(&ev_pending))
-		mask |= (POLLIN | POLLRDNORM);
+		mask |= POLLIN | POLLRDNORM;
 	mutex_unlock(&hdmi_cec_data.lock);
+
 	return mask;
 }
 
-- 
1.9.1

