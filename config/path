set -e

#################################
# Target system path definition #
#################################

XORG_PATH_ENCODINGS=/usr/share/fonts/X11/encodings
XORG_PATH_FONTS=/usr/share/X11/fonts
XORG_PATH_MAPS=$XORG_PATH_FONTS/util
XORG_PATH_DRI=/usr/lib/dri
XORG_PATH_EGL=/usr/lib/egl
XORG_PATH_VAAPI=/usr/lib/va
XORG_PATH_XKB=/usr/share/X11/xkb
XORG_PATH_XKB_OUTPUT=/var/lib/xkb
XORG_PATH_XKB_CACHE=/var/cache/xkb
XORG_PATH_RGB=/usr/lib/X11/rgb
XORG_PATH_MODULES=/usr/lib/xorg/modules
XORG_PATH_DRIVERS=/usr/lib/xorg/modules/drivers
XORG_PATH_ICONS=/usr/share/X11/icons
XORG_PATH_FDI=/usr/share/hal/fdi/policy

###############################################################
# Forced flags tuning (deprecated: to be replaced in Kconfig) #
###############################################################

[ "$WIFI" = no ] && NDISWRAPPER=no && WPA_SUPPLICANT=no
[ "$LIVE555" = yes ] && TARGET_LIBC=glibc && TOOLCHAIN_CXX=yes
[ "$DEBUG" = yes ] && GDB=yes && OPTIMIZATIONS=no
[ "$EMULATORS" = yes ] && TOOLCHAIN_CXX=yes
[ "$GAMES" = yes ] && TOOLCHAIN_CXX=yes
[ "$TARGET_ARCH" = powerpc ] && XORG=no
[ "$TARGET_ARCH" = powerpc64 ] && XORG=no && TARGET_LIBC=glibc
[ "$TARGET_ARCH" = x86_64 ] && CONSOLE=no && XORG=yes
[ "$VDPAU" = yes ] && XORG=yes && NVIDIA=yes && TOOLCHAIN_CXX=yes
[ "$NVIDIA" = yes -a "$TARGET_LIBC" = uclibc ] && TARGET_LIBC=glibc
[ "$VDR" = yes ] && TARGET_LIBC=glibc && TOOLCHAIN_CXX=yes
[ "$UNRAR" = yes ] && TOOLCHAIN_CXX=yes
[ "$WIIMOTE" = yes ] && BLUETOOTH=yes
[ "$TARGET_ARCH" = arm ] && XORG_DRIVERS="fbdev omapfb" && WIFI=no && INSTALLATOR=no && PULSEAUDIO=no

################################
# Static build path definition #
################################

DISTRO_VERSION=`cat VERSION`
CONFIG=config
UTILS=utils
SCRIPTS=scripts
PACKAGES=packages
SOURCES=sources
BINARIES=binaries
BUILD_NOARCH=build/build.host
STAMPS_NOARCH=.stamps
DOCS=DOCS
ROOT=`pwd`

######################
# Toolchain Settings #
######################

. config/toolchain

[ -z "$BOOT_DEFAULT" ] && BOOT_DEFAULT=hdtv

TOOLCHAIN_LANGUAGES=c
[ "$TOOLCHAIN_CXX" = yes ] && TOOLCHAIN_LANGUAGES=${TOOLCHAIN_LANGUAGES},c++

export CCACHE_DIR=$ROOT/$BUILD/.ccache
export MAKEFLAGS=-j$CONCURRENCY_MAKE_LEVEL

if [ -z "$PATH" -o "$PATH" = "${PATH#$ROOT/$TOOLCHAIN/bin:}" ]; then
  export PATH="$ROOT/$TOOLCHAIN/bin:$PATH"
fi

SILENT_OUT=3
VERBOSE_OUT=4
if [ "$VERBOSE" = yes ]; then
  exec 3>&1
  exec 4>&2
else
  exec 3>&2
  exec 4>/dev/null
fi
INDENT_SIZE=4

DISTRONAME_LC=`echo $DISTRONAME | tr '[:upper:]' '[:lower:]'`
DISTRONAME_UC=`echo $DISTRONAME | tr '[:lower:]' '[:upper:]'`

DISTRO_SRCS=http://www.openbricks.org/src/$DISTRO_VERSION
if [ "$DISTRO_VERSION" = devel ]; then
  DISTRO_VERSION=$DISTRO_VERSION-`date +%Y%m%d`
  if [ -d .hg ]; then
    DISTRO_VERSION=$DISTRO_VERSION-r`hg tip --template={rev}`
  elif [ -d .git ]; then
    DISTRO_VERSION=$DISTRO_VERSION-r`git rev-parse --short HEAD`
  fi
fi
[ -n "$DISTRO_VERSION_EXTRA" ] && DISTRO_VERSION=$DISTRO_VERSION-$DISTRO_VERSION_EXTRA

VERSION_SUFFIX=$TARGET_ARCH.$TARGET_LIBC
[ -n "$TARGET_PLATFORM" -a "$TARGET_PLATFORM" != generic ] && \
  VERSION_SUFFIX=$TARGET_PLATFORM.$TARGET_LIBC

BINROOT=$BINARIES/binaries.$VERSION_SUFFIX
ISO=$BINROOT/$FLAVOUR-$DISTRO_VERSION-$VERSION_SUFFIX.iso
GENERATOR_NAME=$BINROOT/$FLAVOUR-generator-$DISTRO_VERSION.$VERSION_SUFFIX
FLAT_NAME=$BINROOT/$FLAVOUR-flat-$DISTRO_VERSION.$VERSION_SUFFIX
PXE_NAME=$BINROOT/$FLAVOUR-pxe/$DISTRONAME_UC.$VERSION_SUFFIX
VMX_NAME=$BINROOT/$FLAVOUR-vmx

HOST_NAME_CACHE=$TOOLCHAIN/share/configtools/host_name
if [ -f $HOST_NAME_CACHE ]; then
  HOST_NAME=`cat $HOST_NAME_CACHE`
elif [ -x $TOOLCHAIN/share/configtools/config.guess ]; then
  HOST_NAME=`$TOOLCHAIN/share/configtools/config.guess`
fi

GST_VERSION=0.10

PACKAGE_URL="$PACKAGES/$1/url"
[ -r "$PACKAGE_URL.$TARGET_ARCH" ] && PACKAGE_URL="$PACKAGE_URL.$TARGET_ARCH"
[ -n "$TARGET_PLATFORM" -a -r "$PACKAGE_URL.$TARGET_PLATFORM" ] && \
PACKAGE_URL="$PACKAGE_URL.$TARGET_PLATFORM"

. config/functions

setup_toolchain target
