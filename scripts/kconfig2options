#!/bin/sh

. config/path

KCONFIG="`ls -d $BUILD_NOARCH/bst-kconfig-*`/.config"

if [ ! -f "$KCONFIG" ]; then
  echo "Cannot find .config, aborting."
  exit 1
fi

cat > config/options <<EOF
############################################
# This file is autogenerated, do not edit! #
############################################

EOF

# take the CONFIG_GX_ options, remove the prefix and add to config/options
grep -E '^CONFIG_GX_' $KCONFIG | sed s/^CONFIG_GX_// | uniq >> config/options

# convert =y/=n to =yes/=no
sed -i -e 's/^\(.*\)=y/\1=yes/' -e 's/^\(.*\)=n/\1=no/' config/options

# packages to be installed to rootfs
PKG_YES=`grep -E '^CONFIG_PKG_.*=y' $KCONFIG | sed 's/^CONFIG_PKG_\(.*\)=y/\1/' | xargs`

echo "ROOTFS_PACKAGES=\"$PKG_YES\"" >> config/options

# packages to be only built as opk
PKG_MOD=`grep -E '^CONFIG_PKG_.*=m' $KCONFIG | sed 's/^CONFIG_PKG_\(.*\)=m/\1/' | xargs`

echo "OPK_PACKAGES=\"$PKG_MOD\"" >> config/options

# enable overlay
grep 'CONFIG_OVERLAY_OPENBRICKS_OPTIONS=y' $KCONFIG && \
  echo 'test -f "$HOME/.openbricks-options" && . "$HOME/.openbricks-options"' \
    >> config/options

# write mandatory stuff
echo ". config/path" >> config/options
