#!/bin/sh

. config/options

NOGET=""

do_md5sum () {
 [ -z "$PKG_MD5" ] && return 0
 echo -n "Computing MD5 check for $1 ... "
 MD5=$(md5sum $1 | cut -d ' ' -f 1)
 if [ "$MD5" != "$PKG_MD5" ]; then
  echo "INVALID"
  exit 1
 else
  echo "OK"
 fi
}

do_sha256sum () {
 [ -z "$PKG_SHA256" ] && return 0
 echo -n "Computing SHA256 check for $1 ... "
 SHA256=$(sha256sum $1 | cut -d ' ' -f 1)
 if [ "$SHA256" != "$PKG_SHA256" ]; then
  echo "INVALID"
  exit 1
 else
  echo "OK"
 fi
}

if [ -z "$1" ]; then
  for i in $PACKAGES/*; do
    GET=yes
    for j in $NOGET; do
      [ ${i##*/} = $j ] && GET=no break
    done
    if [ $GET = yes ]; then
      $SCRIPTS/get ${i#$PACKAGES/} || echo ""
    fi
  done
  exit 0
fi

mkdir -p $STAMPS_NOARCH/$1
STAMP=$STAMPS_NOARCH/$1/get

if [ -f $PACKAGE_URL ]; then
  if [ -f $STAMP ]; then
    [ ! $STAMP -ot $PACKAGE_URL ] && exit 0
  fi
  DL="yes"
fi

get_meta $1

if [ -n "$PKG_URL" ]; then
  if [ -f $STAMP ]; then
    [ ! $STAMP -ot $PACKAGES/$1/meta ] && exit 0
  fi
  DL="yes"
fi

if [ "$DL" = yes ]; then
  $SCRIPTS/checkdeps get || exit 1

  rm -f $STAMP

  printf "%${INDENT}c GET      $1\n" >&$SILENT_OUT
  export INDENT=$((${INDENT:-1}+$INDENT_SIZE))

  [ "$VERBOSE" != yes ] && WGET_OPT=-q

  mkdir -p $SOURCES/$1

  [ -f $PACKAGE_URL ] && \
    URLS=`cat $PACKAGE_URL`

  [ -n "$PKG_URL" ] && \
    URLS="$URLS `echo $PKG_URL`"

  for i in $URLS; do
    NBWGET=1

    PACKAGE_BASENAME=`basename $i`

    echo $PACKAGES/$1/$i
    pwd
    if [ -f $PACKAGES/$1/$i ]; then
      # file is already here, just copy
      echo -e "\nJust copying $i for $1 sources..."
      cp $PACKAGES/$1/$i $SOURCES/$1
    else
      # have to download

      # check for packages mirror usage
      [ "$MIRROR" = yes -a -n "$MIRROR_URL" ] \
        && i="$MIRROR_URL/$PACKAGE_BASENAME"

      until [ -f $STAMPS_NOARCH/$1/$PACKAGE_BASENAME.ok ] || wget --no-check-certificate --passive-ftp -c $WGET_OPT -P $SOURCES/$1 $i; do
        NBWGET=$(($NBWGET+1))
        if [ $NBWGET -gt 10 ]; then
          echo -e "\nCan't get $1 sources : $i\n Try later !!"
          exit 1
        fi
      done
    fi

    do_md5sum    "$SOURCES/$1/$PACKAGE_BASENAME"
    do_sha256sum "$SOURCES/$1/$PACKAGE_BASENAME"
    touch $STAMPS_NOARCH/$1/$PACKAGE_BASENAME.ok
  done

  [ -f $PACKAGE_URL ] && \
    cp -p $PACKAGE_URL $STAMP

  [ -n "$PKG_URL" ] && \
    cp -p $PACKAGES/$1/meta $STAMP

  rm -f $BUILD_BASE*/$STAMPS_NOARCH/$1/unpack
  rm -f $BUILD_BASE*/$STAMPS_NOARCH/$1/build
fi
