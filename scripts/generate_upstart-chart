#!/bin/sh

TMPDIR=/tmp/upstart-init
TMPGRAPH=/tmp/upstart-init.dot

if [ ! -d packages ]; then
  echo "run $0 from OpenBricks repository root!"
  exit 1
fi

mkdir -p $TMPDIR
rm -rf $TMPDIR/*
echo -n >$TMPGRAPH

find packages -type d -name "init" | while read d; do
  find $d -type f -name "*.conf" -exec cp {} $TMPDIR/ \;
done

cd $TMPDIR
# find all signals and jobs
stored_event_names=""
for f in *; do
  job_name=`echo $f | cut -d\. -f1`
  signal_name=`cat $f | grep "^emits" | head -1 | sed 's/^emits[ ]*//g'`
  if [ -n "$signal_name" ]; then
    stored_event_names="$stored_event_names ${job_name}_${signal_name}"
  fi
done

#echo "debug stored_event_names: $stored_event_names"

process_signals()
{
  job_name="$1"
  shift
  stored_event_found=0
  while [ -n "$1" ]; do
    event_name=$1
    #echo "debug found: $stored_event_found; args: $@"
    if [ "$event_name" = "and" -o "$event_name" = "or" ]; then
      shift 
      continue
    elif [ $stored_event_found -gt 0 ]; then
      stored_event_found=0
      shift
      continue
    fi

    stored_event_found=0
    for stored_event_name in $stored_event_names; do
      signal_job=`echo $stored_event_name | cut -d_ -f1`
      signal_name=`echo $stored_event_name | cut -d_ -f2`
      #echo "debug: job_name $job_name; event_name $event_name; signal_job $signal_job; signal_name $signal_name"
      if [ "$signal_name" = "$event_name" ]; then
        echo "\"$signal_job\"->\"$job_name\"" >>$TMPGRAPH
        stored_event_found=1
      fi
    done

    if [ "$stored_event_found" -gt 0 ]; then
      shift
      continue
    else
      echo "\"$event_name\"->\"$job_name\"" >>$TMPGRAPH
      shift
    fi
  done
}

echo "digraph upstart_deps{" >>$TMPGRAPH
for f in *; do
  job_name=`echo $f | cut -d\. -f1`
  echo -e "\n\"$job_name\"" >>$TMPGRAPH
  section_start=0
  cat $f | while read line; do
    if ( echo $line | grep -q "^[ ]*start on " ); then
      line=`echo $line | sed 's/^[ ]*start on //g'`
      section_start=1
    fi
    if [ -z "$line" ]; then
      section_start=0
    else
      case $line in
        task|respawn|console*|emits*|stop\ *|expect*)
          section_start=0
        ;;
      esac
    fi
    if [ $section_start -gt 0 ]; then
        line=`echo $line | sed -e 's/\<started\>//g' -e 's/\<stopped\>//g'`
        line=`echo $line | sed 's/[\(\)]*//g'`
        process_signals $job_name $line
    fi
  done
done
echo "}" >>$TMPGRAPH

cd - >/dev/null 2>&1

if [ -x /opt/zgrviewer/run.sh ]; then
  /opt/zgrviewer/run.sh $TMPGRAPH
else
  dotty $TMPGRAPH
fi
